module.exports = "import * as React from 'react';\n\nexport interface INavProps {\n  /**\n   * A collection of link groups to display in the navigation bar\n   */\n  groups: INavLinkGroup[];\n\n  /**\n   * Used to customize how content inside the link tag is rendered\n   * @defaultvalue Default link rendering\n   */\n  onRenderLink?: Function;\n\n  /**\n   * Function callback invoked when a link in the navigation is clicked\n   */\n  onLinkClick?: (ev?: React.MouseEvent) => void;\n\n  /**\n   * Indicates whether the navigation component renders on top of other content in the UI\n   */\n  isOnTop?: boolean;\n}\n\nexport interface INavLinkGroup {\n  /**\n   * Text to render as the header of a group\n   */\n  name?: string;\n\n  /**\n   * Links to render within this group\n   */\n  links: INavLink[];\n\n  /**\n   *  (Optional) The name to use for functional automation tests\n   **/\n  automationId?: string;\n}\n\nexport interface INavLink {\n  /**\n   * Text to render for this link\n   */\n  name: string;\n\n  /**\n   * URL to navigate to for this link\n   */\n  url: string;\n\n  /**\n   * Child links to this link, if any\n   */\n  links?: INavLink[];\n\n  /** (Optional) icon */\n  iconClassName?: string;\n\n  /**\n   * (Optional) The name of the item to be used in logging engagement data\n   */\n  engagementName?: string;\n\n  /**\n  * (Optional) The alt text for the item\n  **/\n  altText?: string;\n\n  /**\n   *  (Optional) The name to use for functional automation tests\n   **/\n  automationId?: string;\n\n  /** (Optional) Whether or not the link is in an expanded state */\n  isExpanded?: boolean;\n\n  /**\n   * Any additional properties to apply to the rendered links.\n   */\n  [propertyName: string]: any;\n}";