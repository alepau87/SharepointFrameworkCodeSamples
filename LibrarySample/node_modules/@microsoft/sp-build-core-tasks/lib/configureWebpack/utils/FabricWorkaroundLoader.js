"use strict";
var os_1 = require('os');
function syncLoader(content) {
    var context = this; // tslint:disable-line:no-any
    var request = context.request;
    return processRequest(request, context);
}
function processRequest(request, context) {
    var requestSections = request.split('!');
    var fabricPath = requestSections[requestSections.length - 1];
    var posixFabricPath = fabricPath.replace(/\\/g, '/');
    var simplifiedPaths = posixFabricPath.match(/(?:\/office-ui-fabric-react\/lib\/)(.+)/);
    var identifiers = _getFabricExtraIdentifiers(simplifiedPaths[1]);
    var lines = [("// Loading office-ui-fabric-react/" + simplifiedPaths[1])];
    if (identifiers) {
        lines.push.apply(lines, [
            'var fabric = require(\'office-ui-fabric-react\');',
            "module.exports = fabric;"
        ].concat(Object.keys(identifiers).map(function (identifier) {
            return ("module.exports." + identifier + " = fabric." + identifiers[identifier]);
        })));
    }
    else {
        context.emitWarning(("Fabric path \"" + simplifiedPaths[0] + "\" does not correspond to a well-defined export. ") +
            "Large portions of office-ui-fabric-react may be unintentionally bundled.");
        // Remove this loader from the loader chain to make sure we don't end up in an infinite loop
        var passthroughRequestSections = requestSections.filter(function (section) { return !section.match(/FabricWorkaroundLoader.js/i); });
        // Use "!!" prefix to disable all configured loaders because they're already specified in the remaining request.
        lines.push.apply(lines, [
            ("module.exports = require(" + JSON.stringify("!!" + passthroughRequestSections.join('!')) + ");")
        ]);
    }
    return lines.join(os_1.EOL);
}
function _getFabricExtraIdentifiers(path) {
    path = path.trim().match(/(?:\/*)(.+)(?:\.js)$/)[1];
    switch (path) {
        case 'Breadcrumb':
        case 'components/Breadcrumb/index':
        case 'Button':
        case 'components/Button/index':
        case 'Callout':
        case 'components/Callout/index':
        case 'Checkbox':
        case 'components/Checkbox/index':
        case 'ChoiceGroup':
        case 'components/ChoiceGroup/index':
        case 'ColorPicker':
        case 'components/ColorPicker/index':
        case 'CommandBar':
        case 'components/CommandBar/index':
        case 'ContextualMenu':
        case 'components/ContextualMenu/index':
        case 'DatePicker':
        case 'components/DatePicker/index':
        case 'DetailsList':
        case 'components/DetailsList/index':
        case 'DocumentCard':
        case 'components/DocumentCard/index':
        case 'Dropdown':
        case 'components/Dropdown/index':
        case 'Fabric':
        case 'components/Fabric/index':
        case 'Facepile':
        case 'components/Facepile/index':
        case 'FocusTrapZone':
        case 'components/FocusTrapZone/index':
        case 'FocusZone':
        case 'components/FocusZone/index':
        case 'GroupedList':
        case 'components/GroupedList/index':
        case 'Image':
        case 'components/Image/index':
        case 'Label':
        case 'components/Label/index':
        case 'Layer':
        case 'components/Layer/index':
        case 'Link':
        case 'components/Link/index':
        case 'List':
        case 'components/List/index':
        case 'MessageBar':
        case 'components/MessageBar/index':
        case 'MarqueeSelection':
        case 'Nav':
        case 'components/Nav/index':
        case 'OrgChart':
        case 'components/OrgChart/index':
        case 'Overlay':
        case 'components/Overlay/index':
        case 'Panel':
        case 'components/Panel/index':
        case 'PeoplePicker':
        case 'components/PeoplePicker/index':
        case 'Persona':
        case 'components/Persona/index':
        case 'PersonaCard':
        case 'components/PersonaCard/index':
        case 'Pivot':
        case 'components/Pivot/index':
        case 'ProgressIndicator':
        case 'components/ProgressIndicator/index':
        case 'SearchBox':
        case 'components/SearchBox/index':
        case 'Slider':
        case 'components/Slider/index':
        case 'Spinner':
        case 'components/Spinner/index':
        case 'TextField':
        case 'components/TextField/index':
        case 'Toggle':
        case 'components/Toggle/index':
        case 'components/MarqueeSelection/MarqueeSelection':
        case 'components/MarqueeSelection/MarqueeSelection.Props':
        case 'utilities/selection/index':
        case 'utilities/css':
        case 'utilities/KeyCodes':
        case 'utilities/eventGroup/EventGroup':
        case 'utilities/Async/Async':
        case 'utilities/rtl':
            return {};
        case 'Dialog':
        case 'components/Dialog/index':
            return {
                'default': 'Dialog'
            };
        default:
            return undefined;
    }
}
module.exports = syncLoader;

//# sourceMappingURL=FabricWorkaroundLoader.js.map
