{"version":3,"sources":["local/appBase/components/sp-canvas/toolbox/toolbox/Toolbox.tsx"],"names":[],"mappings":"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","file":"local/appBase/components/sp-canvas/toolbox/toolbox/Toolbox.js","sourcesContent":["import * as React from 'react';\r\nimport { FocusZone, FocusZoneDirection, IFocusZoneProps } from 'office-ui-fabric-react/lib/FocusZone';\r\nimport { DisplayMode } from '@microsoft/sp-client-base';\r\nimport { IClientSideWebPartManifest } from '@microsoft/sp-module-interfaces';\r\nimport { SPFlight } from '@microsoft/sp-client-base';\r\nimport { Spinner, SpinnerType, ISpinnerProps } from 'office-ui-fabric-react/lib/Spinner';\r\nimport { StringHelper } from '@ms/odsp-utilities-bundle';\r\n\r\nimport CanvasControlType from '../../../canvas/canvas/CanvasControlType';\r\nimport { ICanvasContext } from '../../canvas/canvasComponent/ICanvasComponent';\r\nimport { IToolboxGroupProps } from '../toolboxGroup/IToolboxGroup';\r\nimport { IToolboxItemProps } from '../toolboxItem/IToolboxItem';\r\nimport { IToolboxProps, IToolboxState } from './IToolbox';\r\nimport ToolboxGroup from '../toolboxGroup/ToolboxGroup';\r\nimport ToolboxItem from '../toolboxItem/ToolboxItem';\r\nimport ToolboxItemClassifier from '../toolboxItem/ToolboxItemClassifier';\r\nimport { IWebPartZoneProps } from '../../../canvas/sampleCanvasControls/WebPartZone';\r\nimport {\r\n  isEscape,\r\n  isTab\r\n} from '../../a11y/CanvasA11y';\r\n\r\nimport './Toolbox.scss';\r\nimport Strings from '../../loc/CanvasStrings.resx';\r\n\r\n/**\r\n * @todo [VSO:SPPPlat] #231682\r\n */\r\nconst CLIENT_SIDE_TEAM_NEWS_FLIGHT: number = 953;\r\nconst NEWSFEED_ID: string = 'a5df8fdf-b508-4b66-98a6-d83bc2597f63';\r\nconst NEWSREEL_ID: string = '0ef418ba-5d19-4ade-9db0-b339873291d0';\r\n\r\nexport default class Toolbox extends React.Component<IToolboxProps, IToolboxState> {\r\n  public static contextTypes: React.ValidationMap<Toolbox> = {\r\n    store: React.PropTypes.object.isRequired\r\n  };\r\n\r\n  public context: ICanvasContext;\r\n\r\n  private _domNode: HTMLElement;\r\n\r\n  constructor(props: IToolboxProps, context: ICanvasContext) {\r\n    super(props, context);\r\n\r\n    this._handleKeyDownCapture = this._handleKeyDownCapture.bind(this);\r\n\r\n    this.state = {\r\n      verticalPosition: props.verticalPosition\r\n    };\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this._domNode.addEventListener('keydown', this._handleKeyDownCapture, true);\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IToolboxProps): void {\r\n    if (this.props.isOpen !== prevProps.isOpen) {\r\n      if (this.props.isOpen) {\r\n        if (this.props.isLoading) {\r\n          this.context.store.a11yManager.ariaAlert(Strings.ToolboxAriaLoadingAlert);\r\n        } else {\r\n          /**\r\n           * Check to see if we're updating from the isLoading state by checking the previous\r\n           * props value. The current props only indicates if it is loading, whereas the transition\r\n           * from isLoading to not isLoading will indicate the particular render when loading has finished.\r\n           */\r\n          if (prevProps.isLoading) {\r\n            this.context.store.a11yManager.ariaAlert(Strings.ToolboxAriaLoadingFinishedAlert);\r\n          }\r\n\r\n          this.context.store.a11yManager.saveState();\r\n          this.context.store.a11yManager.navigateTo(this._domNode);\r\n\r\n          // This assumes there is one non-webpart item (RTE)\r\n          const localizedItemCount: string = StringHelper.formatWithLocalizedCountValue(\r\n            Strings.CanvasItems,\r\n            Strings.CanvasItemsInterval,\r\n            this.props.toolboxItems.length + 1\r\n          );\r\n          const message: string = StringHelper.format(\r\n            Strings.ToolboxNavigationArrowKeys,\r\n            localizedItemCount\r\n          );\r\n\r\n          this.context.store.a11yManager.ariaAlert(message);\r\n        }\r\n      } else {\r\n        this.context.store.a11yManager.clearState();\r\n      }\r\n    }\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IToolboxProps): void {\r\n    if (nextProps.isOpen && this.context.store.scrollableParent) {\r\n      // Use the scrollableParent as our viewport\r\n      const {top, bottom}: ClientRect = this.context.store.scrollableParent.getBoundingClientRect();\r\n      // This value should be in sync with Toolbox.scss\r\n      const toolboxHeight: number = 330;\r\n      const canvasTop: number = this.context.store.canvasElement.getBoundingClientRect().top;\r\n      const hintOffset: number = 28;\r\n      let verticalPosition: number = nextProps.verticalPosition;\r\n\r\n      // Render Toolbox above hint if there is no room below the hint and there is room above\r\n      if (\r\n        (verticalPosition + toolboxHeight + hintOffset + canvasTop > bottom) &&\r\n        (verticalPosition - toolboxHeight - hintOffset > top)\r\n      ) {\r\n        verticalPosition -= toolboxHeight + hintOffset;\r\n      }\r\n\r\n      this.setState({ verticalPosition });\r\n    }\r\n  }\r\n\r\n  public render(): React.ReactElement<IToolboxProps> {\r\n    const {errorMessage, isLoading, isOpen, onItemClick, toolboxItems }: IToolboxProps = this.props;\r\n\r\n    let toolboxContent: React.ReactElement<IFocusZoneProps> | React.ReactElement<ISpinnerProps>;\r\n\r\n    if (isLoading) {\r\n      toolboxContent = (\r\n        <div className='ms-Spinner-container'>\r\n          <Spinner type={SpinnerType.large} />\r\n        </div>\r\n      );\r\n    } else {\r\n      // [VSO:SPPPlat #241904] Update the UI with design approved error state\r\n      let errorLabel: React.ReactElement<HTMLDivElement>;\r\n      if (errorMessage) {\r\n        errorLabel = <div className='CanvasToolbox-Error'> { errorMessage } </div>;\r\n      }\r\n\r\n      const classifier: ToolboxItemClassifier = new ToolboxItemClassifier();\r\n\r\n      for (const item of toolboxItems) {\r\n        /* tslint:disable:no-any */\r\n        const webPartManifest: IClientSideWebPartManifest<any> = (item.itemProps as IWebPartZoneProps).webPartManifest;\r\n        /* tslint:enable:no-any */\r\n\r\n        /**\r\n         * Component manifests will be sent to the client regardless of flight status.\r\n         * Currently checking the newsreel flight on client to hide the web part from the Toolbox\r\n         * if the flight is not on. @todo [VSO:SPPPlat] #231682\r\n         */\r\n        if (\r\n          !SPFlight.isEnabled(CLIENT_SIDE_TEAM_NEWS_FLIGHT) &&\r\n          (webPartManifest.id === NEWSREEL_ID || webPartManifest.id === NEWSFEED_ID)\r\n        ) {\r\n          continue;\r\n        }\r\n\r\n        (item as IToolboxItemProps).onClick = onItemClick;\r\n        classifier.registerItem(item.key as string, item as IToolboxItemProps);\r\n      }\r\n\r\n      // Construct the featured toolbox group\r\n      const featuredItemViews: React.ReactElement<IToolboxItemProps>[] = [];\r\n\r\n      // First add the RTE to featured items\r\n      featuredItemViews.push(\r\n        <ToolboxItem\r\n          description={Strings.TextWebpartDescription}\r\n          displayName={Strings.TextWebPartDisplayName}\r\n          itemProps={{controlType: CanvasControlType.RTE, displayMode: DisplayMode.Edit, id: undefined}}\r\n          key={0}\r\n          msIconName='Font'\r\n          onClick={onItemClick}\r\n        />\r\n      );\r\n\r\n      // next get the featured items and add them to the toolbox\r\n      const featuredItemProps: Array<IToolboxItemProps> = classifier.classify(true);\r\n      featuredItemProps.forEach((item: IToolboxItemProps) => {\r\n        featuredItemViews.push(<ToolboxItem {...(item as IToolboxItemProps)}/>);\r\n      });\r\n\r\n      // Add them to the featured group\r\n      const featuredGroup: React.ReactElement<IToolboxGroupProps> =\r\n        <ToolboxGroup\r\n          groupName={Strings.ToolboxGroupNameFeatured} key={Strings.ToolboxGroupNameFeatured}\r\n          hasHeader={true}\r\n        >\r\n          { featuredItemViews }\r\n        </ToolboxGroup>;\r\n\r\n      // Construct the non featured toolbox group\r\n      const nonFeaturedItemViews: React.ReactElement<IToolboxItemProps>[] = [];\r\n      const nonFeaturedItemProps: Array<IToolboxItemProps> = classifier.classify(\r\n        false,\r\n        (item1: IToolboxItemProps, item2: IToolboxItemProps) => {\r\n          return item1.displayName.localeCompare(item2.displayName);\r\n        }\r\n      );\r\n\r\n      nonFeaturedItemProps.forEach((item: IToolboxItemProps) => {\r\n          nonFeaturedItemViews.push(<ToolboxItem {...(item as IToolboxItemProps)} />);\r\n      });\r\n\r\n      // Add them to the non featured group\r\n      const nonFeaturedGroup: React.ReactElement<IToolboxGroupProps> =\r\n        <ToolboxGroup\r\n          groupName={Strings.ToolboxGroupNameNonFeatured} key={Strings.ToolboxGroupNameNonFeatured}\r\n          hasHeader={false}\r\n        >\r\n          { nonFeaturedItemViews }\r\n        </ToolboxGroup>;\r\n\r\n      toolboxContent = (\r\n        <FocusZone direction={FocusZoneDirection.horizontal} isCircularNavigation={true}>\r\n          { errorLabel }\r\n          { featuredGroup }\r\n          { nonFeaturedGroup }\r\n        </FocusZone>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        role='toolbar'\r\n        className='CanvasToolbox'\r\n        ref={(ref) => this._domNode = ref}\r\n        style={{display: isOpen ? 'block' : 'none', top: this.state.verticalPosition}}\r\n      >\r\n        { toolboxContent }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _handleKeyDownCapture(e: KeyboardEvent): void {\r\n    if (isEscape(e)) {\r\n      this.context.store.a11yManager.restoreState();\r\n      this.context.store.closeToolbox();\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    } else if (isTab(e)) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    }\r\n  }\r\n}"],"sourceRoot":"/src"}