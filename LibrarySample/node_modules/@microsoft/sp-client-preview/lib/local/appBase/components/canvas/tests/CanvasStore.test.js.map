{"version":3,"sources":["local/appBase/components/canvas/tests/CanvasStore.test.ts"],"names":[],"mappings":";AAAA;;GAEG;AACH,qBAA+B,MAAM,CAAC,CAAA;AACtC,+BAOO,2BAA2B,CAAC,CAAA;AAEnC,4BAAwB,uBAAuB,CAAC,CAAA;AAChD,kCAA8B,6BAA6B,CAAC,CAAA;AAK5D,QAAQ,CAAC,oBAAoB,EAAE;IAC7B,IAAM,SAAS,GAAiB,6BAAY,CAAC,YAAY,EAAE,CAAC;IAC5D,SAAS,CAAC,OAAO,CAAC,qCAAoB,EAAE,IAAI,2BAAU,CAAC,SAAS,CAAC,CAAC,CAAC;IACnE,SAAS,CAAC,OAAO,CAAC,sCAAqB,EAAE,IAAI,4BAAW,CAAC,SAAS,CAAC,CAAC,CAAC;IACrE,SAAS,CAAC,MAAM,EAAE,CAAC;IAEnB,IAAI,WAAwB,CAAC;IAC7B,IAAI,MAAsB,CAAC;IAE3B,UAAU,CAAC;QACT,MAAM,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACrB,WAAW;YACT,IAAI,qBAAW,CAAC,SAAS,EAAE,MAAM,EAAE,4BAAW,CAAC,IAAI,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,UAAC,IAAe;QAC/D,WAAW,CAAC,cAAc,CAAC,4BAAW,CAAC,IAAI,CAAC,CAAC;QAC7C,aAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,aAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,4BAAW,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;QACzF,WAAW,CAAC,cAAc,CAAC,4BAAW,CAAC,IAAI,CAAC,CAAC;QAC7C,aAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,aAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,4BAAW,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;QACzF,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,UAAC,IAAe;QACvD,IAAI,YAAY,GAAwB;YACtC,WAAW,EAAE,2BAAiB,CAAC,GAAG;YAClC,WAAW,EAAE,4BAAW,CAAC,IAAI;YAC7B,EAAE,EAAE,YAAY;SACjB,CAAC;QACF,WAAW,CAAC,UAAU,CAAC,2BAAiB,CAAC,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;QAC/D,aAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAI,QAAQ,GAAuB,WAAW,CAAC,QAAQ,CAAC;QACxD,aAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC;QAChE,YAAY,GAAG;YACb,WAAW,EAAE,2BAAiB,CAAC,WAAW;YAC1C,WAAW,EAAE,4BAAW,CAAC,IAAI;YAC7B,EAAE,EAAE,oBAAoB;SACzB,CAAC;QACF,WAAW,CAAC,UAAU,CAAC,2BAAiB,CAAC,WAAW,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;QACvE,aAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC;QAChC,aAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,oBAAoB,CAAC,CAAC;QACxE,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,UAAC,IAAe;QACzD,IAAM,YAAY,GAAwB;YACzC,WAAW,EAAE,2BAAiB,CAAC,GAAG;YAClC,WAAW,EAAE,4BAAW,CAAC,IAAI;YAC7B,EAAE,EAAE,YAAY;SACjB,CAAC;QACF,WAAW,CAAC,UAAU,CAAC,2BAAiB,CAAC,GAAG,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;QAC/D,aAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,aAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChD,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC7B,aAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,aAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChD,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,UAAC,IAAe;QAC7D,IAAM,iBAAiB,GAAW,WAAW,CAAC,SAAS,EAAE,CAAC;QAC1D,aAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;QACzC,IAAM,eAAe,GAAW,aAAa,CAAC;QAC9C,aAAM,CAAC,WAAW,CAAC,iBAAiB,EAAE,eAAe,EAAE,oCAAoC,CAAC,CAAC;QAC7F,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,UAAC,IAAe;QAC/D,IAAM,iBAAiB,GAAW,WAAW,CAAC,SAAS,EAAE,CAAC;QAC1D,aAAM,CAAC,WAAW,CAAC,WAAW,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;QAClE,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kEAAkE,EAAE,UAAC,IAAe;QACrF,IAAM,uBAAuB,GAAW,WAAW,CAAC,eAAe,EAAE,CAAC;QACtE,aAAM,CAAC,uBAAuB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;QAC/C,aAAM,CAAC,WAAW,CAAC,uBAAuB,EAAE,IAAI,EAAE,4CAA4C,CAAC,CAAC;QAChG,aAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC;QAChF,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE,UAAC,IAAe;QACxD,WAAW,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,aAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAM,YAAY,GAAwB,WAAW,CAAC,YAAY,CAAC;QACnE,aAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QACvC,aAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC1C,aAAM,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAClD,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,UAAC,IAAe;QACzD,WAAW,CAAC,YAAY,EAAE,CAAC;QAC3B,aAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC7B,IAAM,YAAY,GAAwB,WAAW,CAAC,YAAY,CAAC;QACnE,aAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;QACxC,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"local/appBase/components/canvas/tests/CanvasStore.test.js","sourcesContent":["/**\r\n * CanvasStore.ts tests\r\n */\r\nimport { expect, assert } from 'chai';\r\nimport {\r\n  HttpClient,\r\n  httpClientServiceKey,\r\n  PageContext,\r\n  pageContextServiceKey,\r\n  ServiceScope,\r\n  DisplayMode\r\n} from '@microsoft/sp-client-base';\r\n\r\nimport CanvasStore from '../canvas/CanvasStore';\r\nimport CanvasControlType from '../canvas/CanvasControlType';\r\nimport ICanvasControlProps from '../canvas/ISerializedCanvasControl';\r\nimport { ICanvasToolboxProps } from '../canvas/CanvasToolbox';\r\nimport { ICanvasZoneProps } from '../canvas/CanvasZone';\r\n\r\ndescribe('Canvas Store tests', () => {\r\n  const rootScope: ServiceScope = ServiceScope.startNewRoot();\r\n  rootScope.provide(httpClientServiceKey, new HttpClient(rootScope));\r\n  rootScope.provide(pageContextServiceKey, new PageContext(rootScope));\r\n  rootScope.finish();\r\n\r\n  let canvasStore: CanvasStore;\r\n  let render: Sinon.SinonSpy;\r\n\r\n  beforeEach(() => {\r\n    render = sinon.spy();\r\n    canvasStore =\r\n      new CanvasStore(rootScope, render, DisplayMode.Edit);\r\n  });\r\n\r\n  it('should change the display mode as expected', (done: MochaDone) => {\r\n    canvasStore.setDisplayMode(DisplayMode.Read);\r\n    assert.isTrue(render.called);\r\n    expect(canvasStore.canvasDisplayMode).to.equal(DisplayMode.Read, 'Display mode is read');\r\n    canvasStore.setDisplayMode(DisplayMode.Edit);\r\n    assert.isTrue(render.called);\r\n    expect(canvasStore.canvasDisplayMode).to.equal(DisplayMode.Edit, 'Display mode is edit');\r\n    done();\r\n  });\r\n\r\n  it('should add the control as expected', (done: MochaDone) => {\r\n    let controlProps: ICanvasControlProps = {\r\n      controlType: CanvasControlType.RTE,\r\n      displayMode: DisplayMode.Edit,\r\n      id: 'RTEControl'\r\n    };\r\n    canvasStore.addControl(CanvasControlType.RTE, controlProps, 0);\r\n    assert.isTrue(render.called);\r\n    let controls: ICanvasZoneProps[] = canvasStore.controls;\r\n    expect(controls[0].childControlProps.id).to.be.eq('RTEControl');\r\n    controlProps = {\r\n      controlType: CanvasControlType.WebPartZone,\r\n      displayMode: DisplayMode.Edit,\r\n      id: 'WebPartZoneControl'\r\n    };\r\n    canvasStore.addControl(CanvasControlType.WebPartZone, controlProps, 1);\r\n    assert.isTrue(render.called);\r\n    controls = canvasStore.controls;\r\n    expect(controls[1].childControlProps.id).to.be.eq('WebPartZoneControl');\r\n    done();\r\n  });\r\n\r\n  it('should delete the control as expected', (done: MochaDone) => {\r\n     const controlProps: ICanvasControlProps = {\r\n      controlType: CanvasControlType.RTE,\r\n      displayMode: DisplayMode.Edit,\r\n      id: 'RTEControl'\r\n    };\r\n    canvasStore.addControl(CanvasControlType.RTE, controlProps, 0);\r\n    assert.isTrue(render.called);\r\n    expect(canvasStore.controls.length).to.be.eq(1);\r\n    canvasStore.deleteControl(0);\r\n    assert.isTrue(render.called);\r\n    expect(canvasStore.controls.length).to.be.eq(0);\r\n    done();\r\n  });\r\n\r\n  it('should serialize the content as expected', (done: MochaDone) => {\r\n    const serializedContent: string = canvasStore.serialize();\r\n    expect(serializedContent).to.be.not.null;\r\n    const expectedContent: string = '<div></div>';\r\n    assert.strictEqual(serializedContent, expectedContent, 'Serialized the content as expected');\r\n    done();\r\n  });\r\n\r\n  it('should deserialize the content as expected', (done: MochaDone) => {\r\n    const serializedContent: string = canvasStore.serialize();\r\n    expect(canvasStore.deserialize(serializedContent)).to.be.not.null;\r\n    done();\r\n  });\r\n\r\n  it('should serialize and deserialize the content in JSON as expected', (done: MochaDone) => {\r\n    const serializedContentinJSON: string = canvasStore.serializeToJSON();\r\n    expect(serializedContentinJSON).to.be.not.null;\r\n    assert.strictEqual(serializedContentinJSON, '[]', 'Serialized the content in JSON as expected');\r\n    expect(canvasStore.deserializeFromJSON(serializedContentinJSON)).to.be.not.null;\r\n    done();\r\n  });\r\n\r\n  it('should open the toolbox as expected', (done: MochaDone) => {\r\n    canvasStore.openToolbox(0, 0);\r\n    assert.isTrue(render.called);\r\n    const toolboxProps: ICanvasToolboxProps = canvasStore.toolboxProps;\r\n    expect(toolboxProps.isOpen).to.be.true;\r\n    expect(toolboxProps.rowIndex).to.be.eq(0);\r\n    expect(toolboxProps.verticalPosition).to.be.eq(0);\r\n    done();\r\n  });\r\n\r\n  it('should close the toolbox as expected', (done: MochaDone) => {\r\n    canvasStore.closeToolbox();\r\n    assert.isTrue(render.called);\r\n    const toolboxProps: ICanvasToolboxProps = canvasStore.toolboxProps;\r\n    expect(toolboxProps.isOpen).to.be.false;\r\n    done();\r\n  });\r\n});"],"sourceRoot":"/src"}