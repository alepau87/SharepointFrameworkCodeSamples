{"version":3,"sources":["local/appBase/components/canvas/tests/ToolbarButton.test.ts"],"names":[],"mappings":";AAAA;;GAEG;AACH,qBAAuB,MAAM,CAAC,CAAA;AAC9B,uBAAoC,QAAQ,CAAC,CAAA;AAC7C,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,8BAAoD,yBAAyB,CAAC,CAAA;AAE9E,QAAQ,CAAC,qBAAqB,EAAE;IAC9B,IAAI,cAAuD,CAAC;IAC5D,IAAI,SAA8B,CAAC;IACnC,IAAI,OAAuB,CAAC;IAC5B,IAAI,SAAyB,CAAC;IAE9B,UAAU,CAAC;QACT,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACtB,SAAS,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACxB,SAAS,GAAG;YACV,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,GAAG,EAAE,YAAY;YACjB,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,SAAS;YACpB,YAAY,EAAE,YAAY;YAC1B,KAAK,EAAE,YAAY;SACpB,CAAC;QAEF,cAAc,GAAG,cAAK,CAA4B,KAAK,CAAC,aAAa,CAAC,uBAAa,EAAE,SAAS,CAAC,CAAC,CAAC;IACnG,CAAC,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,cAAc,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,UAAC,IAAe;QACzD,aAAM,CAAC,cAAc,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpF,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,UAAC,IAAe;QAC9D,cAAc,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAC3E,aAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QACtC,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,UAAC,IAAe;QACzD,cAAc,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC,CAAC;QACnG,aAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QACxC,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,UAAC,IAAe;QAC5D,aAAM,CAAC,cAAc,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACrE,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,UAAC,IAAe;QAC7D,aAAM,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACtE,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,UAAC,IAAe;QACjD,aAAM,CAAC,cAAc,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QACtE,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,UAAC,IAAe;QACrD,aAAM,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC9D,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"local/appBase/components/canvas/tests/ToolbarButton.test.js","sourcesContent":["/**\r\n * ToolbarButton.ts tests\r\n */\r\nimport { expect } from 'chai';\r\nimport { mount, ReactWrapper } from 'enzyme';\r\nimport * as React from 'react';\r\nimport ToolbarButton, { IToolbarButtonProps }  from '../canvas/ToolbarButton';\r\n\r\ndescribe('ToolbarButton tests', () => {\r\n  let toolbarElement: ReactWrapper<IToolbarButtonProps, void>;\r\n  let mockProps: IToolbarButtonProps;\r\n  let onClick: Sinon.SinonSpy;\r\n  let onKeyDown: Sinon.SinonSpy;\r\n\r\n  beforeEach(() => {\r\n    onClick = sinon.spy();\r\n    onKeyDown = sinon.spy();\r\n    mockProps = {\r\n      onClick: onClick,\r\n      disabled: true,\r\n      isActive: true,\r\n      key: 'mockButton',\r\n      tabIndex: 0,\r\n      onKeyDown: onKeyDown,\r\n      automationId: 'mockButton',\r\n      title: 'mockButton'\r\n    };\r\n\r\n    toolbarElement = mount<IToolbarButtonProps, void>(React.createElement(ToolbarButton, mockProps));\r\n  });\r\n\r\n  afterEach(() => {\r\n    toolbarElement.unmount();\r\n  });\r\n\r\n  it('should render the button as expected', (done: MochaDone) => {\r\n    expect(toolbarElement.find(`[data-automation-id='mockButton']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should call the click handler as expected', (done: MochaDone) => {\r\n    toolbarElement.find(`[data-automation-id='mockButton']`).simulate('click');\r\n    expect(onClick.calledOnce).to.be.true;\r\n    done();\r\n  });\r\n\r\n  it('should call the key down as expected', (done: MochaDone) => {\r\n    toolbarElement.find(`[data-automation-id='mockButton']`).simulate('keyDown', { key: 'ArrowDown' });\r\n    expect(onKeyDown.calledOnce).to.be.true;\r\n    done();\r\n  });\r\n\r\n  it('should set the aria-pressed as expected', (done: MochaDone) => {\r\n    expect(toolbarElement.find('[aria-pressed=true]')).to.have.length(1);\r\n    done();\r\n  });\r\n\r\n  it('should set the aria-disabled as expected', (done: MochaDone) => {\r\n    expect(toolbarElement.find('[aria-disabled=true]')).to.have.length(1);\r\n    done();\r\n  });\r\n\r\n  it('should set title as expected', (done: MochaDone) => {\r\n    expect(toolbarElement.find('[title=\"mockButton\"]')).to.have.length(1);\r\n    done();\r\n  });\r\n\r\n  it('should set tab index as expected', (done: MochaDone) => {\r\n    expect(toolbarElement.find('[tabIndex=0]')).to.have.length(1);\r\n    done();\r\n  });\r\n});"],"sourceRoot":"/src"}