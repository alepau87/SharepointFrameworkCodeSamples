{"version":3,"sources":["local/appBase/components/sp-canvas/canvas/canvasComponent/CanvasStore.ts"],"names":[],"mappings":"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","file":"local/appBase/components/sp-canvas/canvas/canvasComponent/CanvasStore.js","sourcesContent":["import { cloneDeep, merge } from '@microsoft/sp-lodash-subset';\r\nimport { DisplayMode, Guid, ServiceScope, Validate, _QosMonitor } from '@microsoft/sp-client-base';\r\nimport { IClientSideWebPartManifest } from '@microsoft/sp-module-interfaces';\r\n\r\nimport { CanvasA11yManager } from '../../a11y/CanvasA11y';\r\nimport CanvasControlType from '../../../canvas/canvas/CanvasControlType';\r\nimport CanvasWebPartHost from '../../../canvas/canvas/CanvasWebPartHost';\r\nimport ClientSideWebPartManager from '../../../../../clientSideWebParts/core/ClientSideWebPartManager';\r\nimport { ISerializedCanvasControl } from '../canvasControl/ISerializedCanvasControl';\r\nimport { IToolboxItem } from '../../toolbox/toolboxItem/IToolboxItem';\r\nimport { IToolboxProps } from '../../toolbox/toolbox/IToolbox';\r\nimport IWebPartData from '../../../../../clientSideWebParts/core/IWebPartData';\r\nimport {\r\n  PropertyPaneState } from '../../../../../clientSideWebParts/propertyPane/propertyPane/PropertyPaneDefinitions';\r\nimport SPRte, { ISPRteProps } from '../../../sp-rte/rte/SPRte';\r\nimport Strings from '../../loc/CanvasStrings.resx';\r\nimport WebPartZone, { IWebPartZoneProps } from '../../../canvas/sampleCanvasControls/WebPartZone';\r\n\r\nexport default class CanvasStore {\r\n  private _a11yManager: CanvasA11yManager;\r\n  private _canvasElement: HTMLElement;\r\n  private _controls: Map<string, SPRte | WebPartZone>;\r\n  private _controlsProps: ISerializedCanvasControl[];\r\n  private _deletedRow: number;\r\n  private _displayMode: DisplayMode;\r\n  private _fetchedWebParts: boolean;\r\n  private _handleCanvasChanged: () => void;\r\n  private _hoveredControlId: string;\r\n  private _isDeleteDialogOpen: boolean;\r\n  private _oldActiveElement: Element;\r\n  private _pollId: number;\r\n  private _render: () => void;\r\n  private _scrollableParentElement: HTMLElement;\r\n  private _scrollThreshold: number;\r\n  private _selectedControlId: string;\r\n  private _rowToBeDeleted: number;\r\n  private _toolboxProps: IToolboxProps;\r\n  private _webPartManager: ClientSideWebPartManager;\r\n\r\n  constructor(\r\n    serviceScope: ServiceScope,\r\n    render: () => void,\r\n    mode: DisplayMode,\r\n    serializedCanvas?: string,\r\n    handleCanvasChanged?: () => void,\r\n    scrollThreshold?: number\r\n  ) {\r\n    Validate.isNotNullOrUndefined(serviceScope, 'serviceScope');\r\n    Validate.isNotNullOrUndefined(render, 'render');\r\n    Validate.isNotNullOrUndefined(mode, 'mode');\r\n\r\n    this._addReference = this._addReference.bind(this);\r\n    this._notifyChanged = this._notifyChanged.bind(this);\r\n    this.handleToolboxItemClick = this.handleToolboxItemClick.bind(this);\r\n    this.closeToolbox = this.closeToolbox.bind(this);\r\n    this.createQosScope = this.createQosScope.bind(this);\r\n    this.deleteControl = this.deleteControl.bind(this);\r\n    this.handleConfigureButtonClicked = this.handleConfigureButtonClicked.bind(this);\r\n    this.handleDeleteButtonClicked = this.handleDeleteButtonClicked.bind(this);\r\n    this.handleDeleteDialogConfirmation = this.handleDeleteDialogConfirmation.bind(this);\r\n    this.handleDeleteDialogDismiss = this.handleDeleteDialogDismiss.bind(this);\r\n    this.handleWindowBlur = this.handleWindowBlur.bind(this);\r\n    this.reclaimFocus = this.reclaimFocus.bind(this);\r\n    this.scrollIntoView = this.scrollIntoView.bind(this);\r\n    this.openToolbox = this.openToolbox.bind(this);\r\n\r\n    this._render = render;\r\n    this._controls = new Map<string, SPRte | WebPartZone>();\r\n    this._controlsProps = [];\r\n    this._displayMode = mode;\r\n    this._handleCanvasChanged = handleCanvasChanged;\r\n    this._isDeleteDialogOpen = false;\r\n    this._pollActiveElement = this._pollActiveElement.bind(this);\r\n    this._scrollThreshold = scrollThreshold || 0;\r\n    this._webPartManager = new ClientSideWebPartManager(\r\n      new CanvasWebPartHost(\r\n        serviceScope,\r\n        this.scrollIntoView.bind(this, 'full'),\r\n        handleCanvasChanged,\r\n        this.reclaimFocus)\r\n    );\r\n\r\n    this._toolboxProps = {\r\n      isLoading: true,\r\n      isOpen: false,\r\n      onItemClick: this.handleToolboxItemClick.bind(this, 0),\r\n      row: undefined,\r\n      toolboxItems: [],\r\n      verticalPosition: undefined\r\n    };\r\n\r\n    // _fetchWebParts is a no-op if not in DisplayMode.Edit\r\n    this._fetchWebParts();\r\n  }\r\n\r\n  public get addReference(): (ref: SPRte | WebPartZone) => void {\r\n    return this._addReference;\r\n  }\r\n\r\n  public get a11yManager(): CanvasA11yManager {\r\n    return this._a11yManager;\r\n  }\r\n\r\n  public set a11yManager(elem: CanvasA11yManager) {\r\n    this._a11yManager = elem;\r\n  }\r\n\r\n  public get canvasElement(): HTMLElement {\r\n    return this._canvasElement;\r\n  }\r\n\r\n  public set canvasElement(elem: HTMLElement) {\r\n    this._canvasElement = elem;\r\n  }\r\n\r\n  public get controlsProps(): ISerializedCanvasControl[] {\r\n    return this._controlsProps;\r\n  }\r\n\r\n  public get deletedRow(): number {\r\n    return this._deletedRow;\r\n  }\r\n\r\n  public set deletedRow(row: number) {\r\n    this._deletedRow = row;\r\n  }\r\n\r\n  public get displayMode(): DisplayMode {\r\n    return this._displayMode;\r\n  }\r\n\r\n  public set displayMode(newMode: DisplayMode) {\r\n    if (this._displayMode !== newMode) {\r\n      this._displayMode = newMode;\r\n      for (const props of this.controlsProps) {\r\n        this._controls.get(props.id).setDisplayMode(newMode);\r\n      }\r\n\r\n      if (this._displayMode === DisplayMode.Read) {\r\n        this._selectedControlId = undefined;\r\n        this.webPartManager.configureStart(undefined, PropertyPaneState.Close);\r\n        this._toolboxProps.isOpen = false;\r\n      }\r\n\r\n      // _fetchWebParts is a no-op if not in DisplayMode.Edit\r\n      this._fetchWebParts();\r\n\r\n      this._render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The hoveredControlId keeps track of which control the pointer is currently over.\r\n   * It is used as a workaround to track pointer events on web parts that have IFrames.\r\n   */\r\n  public set hoveredControlId(id: string) {\r\n    this._hoveredControlId = id;\r\n  }\r\n\r\n  public get isDeleteDialogOpen(): boolean {\r\n    return this._isDeleteDialogOpen;\r\n  }\r\n\r\n  public get notifyChanged(): () => void {\r\n    return this._notifyChanged;\r\n  }\r\n\r\n  public get scrollableParent(): HTMLElement {\r\n    return this._scrollableParentElement;\r\n  }\r\n\r\n  public set scrollableParent(elem: HTMLElement) {\r\n    this._scrollableParentElement = elem;\r\n  }\r\n\r\n  public get scrollThreshold(): number {\r\n    return this._scrollThreshold;\r\n  }\r\n\r\n  public get selectedControlId(): string {\r\n    return this._selectedControlId;\r\n  }\r\n\r\n  public set selectedControlId(id: string) {\r\n    if (this._selectedControlId !== id) {\r\n      this._selectedControlId = id;\r\n\r\n      /**\r\n       * If open, change the Property Pane to reflect the new selection. If the new selection is not a web part,\r\n       * change the Property Pane to the empty state.\r\n       */\r\n      const control: SPRte | WebPartZone = this._controls.get(id);\r\n      if (control && control.props.controlType !== CanvasControlType.WebPartZone) {\r\n        this._webPartManager.configureStart(undefined);\r\n      } else {\r\n        this._webPartManager.configureStart(id);\r\n      }\r\n\r\n      this._render();\r\n    }\r\n  }\r\n\r\n  public get toolboxProps(): IToolboxProps {\r\n    return this._toolboxProps;\r\n  }\r\n\r\n  public get webPartManager(): ClientSideWebPartManager {\r\n    return this._webPartManager;\r\n  }\r\n\r\n  public handleToolboxItemClick(\r\n    row: number,\r\n    itemProps: ISerializedCanvasControl\r\n  ): void {\r\n    const qos: _QosMonitor = this.createQosScope('ToolboxItemClicked');\r\n\r\n    if (this._displayMode === DisplayMode.Edit) {\r\n      this._selectedControlId = itemProps.id = Guid.newGuid().toString();\r\n      this._addControl(row, itemProps);\r\n\r\n      this._render();\r\n      this._notifyChanged();\r\n      qos.writeSuccess();\r\n    } else {\r\n      // This method should never be invoked when in DisplayMode.Read since the Toolbox should not be visible.\r\n      qos.writeUnexpectedFailure('ReadMode');\r\n    }\r\n  }\r\n\r\n  public deleteControl(row: number): void {\r\n    this._deletedRow = row;\r\n    this._controlsProps.splice(row, 1);\r\n\r\n    if (this._controlsProps.length === 0) {\r\n      this._webPartManager.configureStart(undefined, PropertyPaneState.Close);\r\n    }\r\n\r\n    this._render();\r\n    this._notifyChanged();\r\n  }\r\n\r\n  public getControl(id: string): SPRte | WebPartZone {\r\n    return this._controls.get(id);\r\n  }\r\n\r\n  public openToolbox(row: number, verticalPosition: number): void {\r\n    if (this._toolboxProps.isOpen) {\r\n      this.closeToolbox();\r\n    }\r\n\r\n    this._toolboxProps.isOpen = true;\r\n    this._toolboxProps.onItemClick = this.handleToolboxItemClick.bind(this, row);\r\n    this._toolboxProps.row = row;\r\n    this._toolboxProps.verticalPosition = verticalPosition;\r\n    document.addEventListener('click', this.closeToolbox);\r\n\r\n    this._render();\r\n  }\r\n\r\n  public closeToolbox(): void {\r\n    this._toolboxProps.isOpen = false;\r\n    this._toolboxProps.row = undefined;\r\n    document.removeEventListener('click', this.closeToolbox);\r\n\r\n    this._render();\r\n  }\r\n\r\n  public createQosScope(scope: string): _QosMonitor {\r\n    return new _QosMonitor(`Canvas${scope}`);\r\n  }\r\n\r\n  public handleConfigureButtonClicked(id: string): void {\r\n    const isCurrentlySelected: boolean = this.selectedControlId === id;\r\n\r\n    // Only toggle the Property Pane if the currently selected control's configure button is clicked.\r\n    (this._controls.get(id) as WebPartZone).handleConfigureButtonClicked(isCurrentlySelected);\r\n\r\n    // Set private member so we don't call configureStart twice.\r\n    this._selectedControlId = id;\r\n    this._render();\r\n  }\r\n\r\n  public handleDeleteButtonClicked(row: number): void {\r\n    this._rowToBeDeleted = row;\r\n\r\n    const control: ISerializedCanvasControl = this._controlsProps[this._rowToBeDeleted];\r\n    this._selectedControlId = control.id;\r\n    this._webPartManager.configureStart(\r\n      control.controlType === CanvasControlType.WebPartZone ? this._selectedControlId : undefined\r\n    );\r\n    this._isDeleteDialogOpen = true;\r\n\r\n    this._render();\r\n  }\r\n\r\n  public handleDeleteDialogConfirmation(): void {\r\n    const qos: _QosMonitor = this.createQosScope('DeleteWebPart');\r\n    let controlProps: ISerializedCanvasControl;\r\n    try {\r\n      controlProps = this._controlsProps[this._rowToBeDeleted];\r\n\r\n      if (controlProps.controlType === CanvasControlType.WebPartZone) {\r\n        (this._controls.get(controlProps.id) as WebPartZone).handleDeleteButtonClicked();\r\n      }\r\n\r\n      this._isDeleteDialogOpen = false;\r\n      this.deleteControl(this._rowToBeDeleted);\r\n\r\n      qos.writeSuccess();\r\n    } catch (err) {\r\n      this._handleMonitoredException(qos, err, controlProps);\r\n    }\r\n  }\r\n\r\n  public handleDeleteDialogDismiss(): void {\r\n    this._rowToBeDeleted = undefined;\r\n    this._isDeleteDialogOpen = false;\r\n\r\n    this._render();\r\n  }\r\n\r\n  /**\r\n   * IFrame's swallow pointer events, so this is a workaround to detect when focus has shifted to\r\n   * an IFrame. Additionally, to compensate for IFrame to IFrame interactions we poll for the document.activeElement.\r\n   * If document.activeElement is not the same as it was in the last poll then the focus has shifted from the IFrame.\r\n   * If the new document.activeElement is an IFrame continue polling, otherwise we can stop polling because focus\r\n   * is back inside of the current document.\r\n   */\r\n  public handleWindowBlur(e: MouseEvent): void {\r\n    if (this._hoveredControlId && document.activeElement.tagName === 'IFRAME') {\r\n      this.selectedControlId = this._hoveredControlId;\r\n      this._oldActiveElement = document.activeElement;\r\n\r\n      // Before setting a new interval clear the last one, this prevents more than one poll to be active.\r\n      window.clearInterval(this._pollId);\r\n      this._pollId = window.setInterval(this._pollActiveElement, 250);\r\n    }\r\n  }\r\n\r\n  public deserialize(serializedCanvas: string): void {\r\n    const qos: _QosMonitor = this.createQosScope('Deserialize');\r\n    let controlProps: ISerializedCanvasControl;\r\n    try {\r\n      this._controlsProps = [];\r\n      this._controls = new Map<string, SPRte | WebPartZone>();\r\n\r\n      if (serializedCanvas) {\r\n        const wrapper: HTMLElement = document.createElement('div');\r\n        wrapper.innerHTML = serializedCanvas;\r\n\r\n        const rows: NodeListOf<Element> = wrapper.querySelectorAll('[data-sp-canvascontrol]');\r\n        const rowLength: number = rows.length;\r\n        for (let i: number = 0; i < rowLength; ++i) {\r\n          const row: Element = rows[i];\r\n          controlProps = JSON.parse(decodeURI(row.getAttribute('data-sp-controldata')));\r\n          controlProps.displayMode = this._displayMode;\r\n          this._addControl(i, controlProps);\r\n        }\r\n      }\r\n\r\n      qos.writeSuccess();\r\n    } catch (err) {\r\n      this._handleMonitoredException(qos, err, controlProps);\r\n    }\r\n  }\r\n\r\n  public reclaimFocus(): void {\r\n    this._controls.get(this._selectedControlId).focus();\r\n  }\r\n\r\n  /**\r\n   * If needed, scrolls element into view after the element is added to the Canvas.\r\n   * Note: Javascript scrollIntoView is not consistent cross-browser\r\n   *\r\n   * @param type - Specifies whether to scroll if the 'full' web part is visible or a 'partial' part of the web part\r\n   *   is visible\r\n   * @param element - A rendered element inside the Canvas to scroll to\r\n   * @param duration - The length of time the animation should take. Frames are calculated by duration / delta time.\r\n   * @param margin - Optional. Margin to be scrolled into view. If not provided, margin is not scrolled into view\r\n   */\r\n  public scrollIntoView(type: 'full' | 'partial', element: HTMLElement, duration: number, margin: number = 0): void {\r\n    if (!this.scrollableParent || !element) {\r\n      return;\r\n    }\r\n\r\n    const viewportHeight: number = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n    const frameBottom: number = Math.min(viewportHeight, this.scrollableParent.getBoundingClientRect().bottom);\r\n\r\n    const elementClientRect: ClientRect = element.getBoundingClientRect();\r\n\r\n    // 'partial' checks bottom to see if the element is partially hidden after adding, if it is scroll into view\r\n    // 'full checks if the entire web part is hidden, if it is scroll into view\r\n    if ((type === 'partial' ? elementClientRect.bottom : elementClientRect.top) > frameBottom) {\r\n      this._scrollElementIntoView(frameBottom, element, duration, margin);\r\n    }\r\n  }\r\n\r\n  public serialize(): string {\r\n    const qos: _QosMonitor = this.createQosScope('Serialize');\r\n    let controlData: ISerializedCanvasControl;\r\n    try {\r\n      const body: HTMLElement = document.createElement('div');\r\n      const controlRow: HTMLElement = document.createElement('div');\r\n      controlRow.setAttribute('data-sp-canvascontrol', '');\r\n      const componentIdElement: HTMLElement = document.createElement('div');\r\n      componentIdElement.setAttribute('data-sp-componentId', '');\r\n      const htmlPropertiesElement: HTMLElement = document.createElement('div');\r\n      htmlPropertiesElement.setAttribute('data-sp-htmlproperties', '');\r\n\r\n      for (const control of this._controlsProps) {\r\n        const row: HTMLElement = controlRow.cloneNode() as HTMLElement;\r\n        controlData = this._controls.get(control.id).serialize();\r\n\r\n        if (control.controlType === CanvasControlType.RTE) {\r\n          row.innerHTML = (controlData as ISPRteProps).innerHTML;\r\n        } else if (control.controlType === CanvasControlType.WebPartZone) {\r\n          const componentId: HTMLElement = componentIdElement.cloneNode() as HTMLElement;\r\n          componentId.textContent = (controlData as IWebPartZoneProps).webPartId;\r\n          row.appendChild(componentId);\r\n\r\n          const webPartData: IWebPartData = (controlData as IWebPartZoneProps).webPartData;\r\n          if (webPartData) {\r\n            const htmlProperties: HTMLElement = htmlPropertiesElement.cloneNode() as HTMLElement;\r\n            htmlProperties.innerHTML = (controlData as IWebPartZoneProps).webPartData.htmlProperties;\r\n            row.appendChild(htmlProperties);\r\n          }\r\n        }\r\n\r\n        row.setAttribute('data-sp-controldata', encodeURI(JSON.stringify(controlData)));\r\n        body.appendChild(row);\r\n      }\r\n\r\n      const wrapper: HTMLElement = document.createElement('div');\r\n      wrapper.appendChild(body);\r\n\r\n      qos.writeSuccess();\r\n\r\n      return wrapper.innerHTML;\r\n    } catch (err) {\r\n      this._handleMonitoredException(qos, err, controlData);\r\n    }\r\n  }\r\n\r\n  public tryGeneratePreviewImageUrl(): string {\r\n    const qos: _QosMonitor = this.createQosScope('GeneratePreviewImageUrl');\r\n\r\n    try {\r\n      const webpartIds: string[] = [];\r\n      for (const control of this._controlsProps) {\r\n        if (control.controlType === CanvasControlType.WebPartZone) {\r\n          webpartIds.push(control.id);\r\n        }\r\n      }\r\n\r\n      const previewUrl: string = this.webPartManager.tryGeneratePreviewImageUrl(webpartIds);\r\n\r\n      qos.writeSuccess();\r\n\r\n      return previewUrl;\r\n    } catch (err) {\r\n      this._handleMonitoredException(qos, err);\r\n    }\r\n  }\r\n\r\n  private _addControl(row: number, itemProps: ISerializedCanvasControl): void {\r\n    if (!itemProps.id) {\r\n      itemProps.id = Guid.newGuid().toString();\r\n    }\r\n\r\n    if (\r\n      itemProps.controlType === CanvasControlType.WebPartZone &&\r\n      !(itemProps as IWebPartZoneProps).webPartManifest\r\n    ) {\r\n      const webPartProps: IWebPartZoneProps = itemProps as IWebPartZoneProps;\r\n      webPartProps.webPartManifest = this._getManifestMap().get(webPartProps.webPartId);\r\n    }\r\n\r\n    this._controlsProps.splice(row, 0, itemProps);\r\n  }\r\n\r\n  private _addReference(ref: SPRte | WebPartZone): void {\r\n    if (ref) {\r\n      this._controls.set(ref.props.id, ref);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates the easing number using the quadratic in-out formula\r\n   */\r\n  private _calculateEasing(time: number, start: number, diff: number, duration: number): number {\r\n    time /= duration / 2;\r\n    if (time < 1) {\r\n      return diff / 2 * time * time + start;\r\n    } else {\r\n      --time;\r\n      return -diff / 2 * (time * (time - 2) - 1) + start;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If the Canvas is in DisplayMode.Edit then fetch the web part manifests in the background.\r\n   */\r\n  private _fetchWebParts(): void {\r\n    if (!this._fetchedWebParts && DisplayMode.Edit === this._displayMode) {\r\n      /**\r\n       * We only need to fetch the web part manifests once per site. If the SPSite changed, then a full page\r\n       * refresh would have happened thus resetting the value.\r\n       */\r\n      this._webPartManager.fetchWebParts().then(\r\n        () => {\r\n          // Set sentinel so we don't attempt to fetch again\r\n          this._fetchedWebParts = true;\r\n\r\n          // Clear any previous error message state\r\n          this._toolboxProps.errorMessage = undefined;\r\n          this._loadWebParts();\r\n        },\r\n        (error: Error) => {\r\n          this._toolboxProps.errorMessage = Strings.ToolboxErrorMessage;\r\n\r\n          // At the least we can load pre-loaded web part manifests\r\n          this._loadWebParts();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  private _loadWebParts(): void {\r\n    const qos: _QosMonitor = this.createQosScope('LoadWebPartsInToolbox');\r\n\r\n    try {\r\n      /* tslint:disable:no-any */\r\n      this._getManifestMap().forEach((manifest: IClientSideWebPartManifest<any>, cid: string) => {\r\n      /* tslint:enable:no-any */\r\n        let i: number = 0;\r\n        for (const entry of manifest.preconfiguredEntries) {\r\n          const itemProps: IWebPartZoneProps = {\r\n            controlType: CanvasControlType.WebPartZone,\r\n            displayMode: DisplayMode.Edit,\r\n            id: undefined,\r\n            webPartId: cid,\r\n            webPartData: undefined,\r\n            webPartManifest: merge(cloneDeep(manifest), entry)\r\n          };\r\n\r\n          const toolboxItem: IToolboxItem = {\r\n            itemProps,\r\n            description: entry.description.default,\r\n            displayName: entry.title.default,\r\n            msIconName: entry.officeFabricIconFontName,\r\n            key: `${manifest.id}_${i++}`\r\n          };\r\n\r\n          this._toolboxProps.toolboxItems.push(toolboxItem);\r\n        }\r\n      });\r\n\r\n      this._toolboxProps.isLoading = false;\r\n    } catch (err) {\r\n      this._handleMonitoredException(qos, err);\r\n    }\r\n\r\n    // No point in updating the UI if the Toolbox is not open\r\n    if (this._toolboxProps.isOpen) {\r\n      this._render();\r\n    }\r\n  }\r\n\r\n  /* tslint:disable:no-any */\r\n  private _getManifestMap(): Map <string, IClientSideWebPartManifest<any>> {\r\n    const tempMap: Map<string, IClientSideWebPartManifest <any>> = new Map<string, IClientSideWebPartManifest<any>>();\r\n    const manifests: IClientSideWebPartManifest<any> [] = this._webPartManager.getWebParts();\r\n  /* tslint:enable:no-any */\r\n\r\n    for (const manifest of manifests) {\r\n      tempMap.set(manifest.id, manifest);\r\n    }\r\n\r\n    return tempMap;\r\n  }\r\n\r\n  private _pollActiveElement(): void {\r\n    const activeElement: Element = document.activeElement;\r\n    if (activeElement.tagName !== 'IFRAME') {\r\n      window.clearInterval(this._pollId);\r\n    } else if (this._oldActiveElement !== activeElement && this._hoveredControlId) {\r\n      this._oldActiveElement = activeElement;\r\n      this.selectedControlId = this._hoveredControlId;\r\n    }\r\n  }\r\n\r\n  private _scroll(start: number, end: number, duration: number, time: number = 0): void {\r\n    const diff: number = end - start;\r\n    const deltaTime: number = 20;\r\n\r\n    if (time < duration) {\r\n      requestAnimationFrame(() => {\r\n        time += deltaTime;\r\n        this.scrollableParent.scrollTop = this._calculateEasing(time, start, diff, duration);\r\n        this._scroll(start, end, duration, time);\r\n      });\r\n    }\r\n  }\r\n\r\n  private _scrollElementIntoView(frameBottom: number, element: HTMLElement, duration: number, margin: number): void {\r\n    const elementClientRect: ClientRect = element.getBoundingClientRect();\r\n    const scrollPosition: number = elementClientRect.bottom - this.canvasElement.getBoundingClientRect().top;\r\n\r\n    const frameTop: number = Math.max(0, this.scrollableParent.getBoundingClientRect().top);\r\n    const offset: number = frameTop - frameBottom + this._scrollThreshold + margin;\r\n\r\n    const newScrollTop: number = scrollPosition + offset + this._scrollThreshold;\r\n\r\n    this._scroll(this.scrollableParent.scrollTop, newScrollTop, duration);\r\n  }\r\n\r\n  private _notifyChanged(): void {\r\n    if (this._handleCanvasChanged) {\r\n      this._handleCanvasChanged();\r\n    }\r\n  }\r\n\r\n  private _handleMonitoredException(qos: _QosMonitor, err: Error, props?: ISerializedCanvasControl): void {\r\n    let extraData: { [key: string]: any }; /* tslint:disable-line:no-any */\r\n      if (props) {\r\n        extraData = { 'id': (props as IWebPartZoneProps).webPartId };\r\n      }\r\n      qos.writeUnexpectedFailure('Exception', err, extraData);\r\n  }\r\n}"],"sourceRoot":"/src"}