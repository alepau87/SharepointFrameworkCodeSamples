{"version":3,"sources":["local/appBase/components/sp-rte/test/SPRtetest.test.tsx"],"names":[],"mappings":"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","file":"local/appBase/components/sp-rte/test/SPRtetest.test.js","sourcesContent":["/**\r\n * SPRte.ts tests\r\n */\r\nimport { expect, assert } from 'chai';\r\nimport { mount, ReactWrapper } from 'enzyme';\r\nimport * as React from 'react';\r\nimport { ISPRteProps, ISPRteState } from '../rte/SPRte';\r\nimport SPRte from '../rte/SPRte';\r\nimport CanvasControlType from '../../canvas/canvas/CanvasControlType';\r\nimport {\r\n  DisplayMode\r\n} from '@microsoft/sp-client-base';\r\n\r\nimport SPRteFormattingBar\r\nfrom '../formattingbar/SPRteFormattingBar';\r\nimport SPRteLinkDialog from '../formattingbar/SPRteLinkDialog';\r\n\r\ndescribe('SPRTE tests', () => {\r\n  let sprteElement: ReactWrapper<ISPRteProps, ISPRteState>;\r\n  let mockProps: ISPRteProps;\r\n  let onChange: Sinon.SinonSpy;\r\n\r\n  beforeEach(() => {\r\n    onChange = sinon.spy();\r\n    mockProps = {\r\n      controlType: CanvasControlType.RTE,\r\n      displayMode: DisplayMode.Edit,\r\n      id: 'RTEControl',\r\n      innerHTML: 'Hello World',\r\n      onChange: onChange\r\n    };\r\n\r\n    sprteElement = mount<ISPRteProps, ISPRteState>(React.createElement(SPRte, mockProps));\r\n    sprteElement.setState({ isFormattingBarHidden: false });\r\n  });\r\n\r\n  afterEach(() => {\r\n    sprteElement.unmount();\r\n  });\r\n\r\n  it('calls componentDidMount after mounting', (done: MochaDone) => {\r\n    const spy: Sinon.SinonSpy = sinon.spy(SPRte.prototype, 'componentDidMount');\r\n    sprteElement = mount<ISPRteProps, ISPRteState>(React.createElement(SPRte, mockProps));\r\n    assert(spy.calledOnce);\r\n    done();\r\n  });\r\n\r\n  it('should render the formatting bar when it is set to visible', (done: MochaDone) => {\r\n    expect(sprteElement.find(SPRteFormattingBar).length).to.be.eq(1);\r\n    sprteElement.setState({ isFormattingBarHidden: true });\r\n    expect(sprteElement.find(SPRteFormattingBar).length).to.be.eq(0);\r\n    done();\r\n  });\r\n\r\n  it('should render the link dialog in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(SPRteLinkDialog).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the text box in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='textBox']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the bold button in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='bold-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the italic button in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='italic-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the underline button in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='underline-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the link button in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='link-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the unlink button in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='unlink-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the clear formatting button in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='clearFormatting-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the align left button in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='alignLeft-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the center button in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='alignCenter-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the align right in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='alignRight-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the bulleted list in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='bullet-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the numbered list in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='list-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the h2 in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='h2-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the h3 in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='h3-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the normal text in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='normalText-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n\r\n  it('should render the pull quote in edit mode', (done: MochaDone) => {\r\n    expect(sprteElement.find(`[data-automation-id='blockquote-button']`).length).to.be.eq(1);\r\n    done();\r\n  });\r\n});"],"sourceRoot":"/src"}