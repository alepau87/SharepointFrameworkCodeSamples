{"version":3,"sources":["local/clientSideWebParts/propertyPane/propertyPaneFooter/PropertyPaneFooter.tsx"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,uCAAoB,wBAAwB,CAAC,CAAA;AAC7C,6BAAoB,qBAAqB,CAAC,CAAA;AAC1C,+CAAmB,kCAAkC,CAAC,CAAA;AACtD,sCAA6B,2BAA2B,CAAC,CAAA;AACzD,6BAA8B,8BAA8B,CAAC,CAAA;AAW7D;IAAgD,sCAA+C;IAE7F,4BAAY,KAA+B;QACzC,kBAAM,KAAK,CAAC,CAAC;QAEb,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvE,CAAC;IAEM,mCAAM,GAAb;QACE,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,IAAI,CAChE,qBAAC,GAAG,IAAC,SAAS,EAAG,wCAAM,CAAC,kBAAoB,GACxC,IAAI,CAAC,qBAAqB,EAAI,EAC9B,IAAI,CAAC,sBAAsB,EAAI,CAC7B,CACP,CAAC,CAAC;IACP,CAAC;IAEO,kDAAqB,GAA7B;QACE,2FAA2F;QAC3F,4FAA4F;QAC5F,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,KAAK,CAAC,IAAI,CACzC,qBAAC,GAAG,IAAC,SAAS,EAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,GAAG,wCAAM,CAAC,6BAA6B,GAAG,SAAW,GAChG,qBAAC,MAAM,IAAC,SAAS,EAAC,8BAA8B,EAAC,QAAQ,EAAG,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAqB,EAC3F,OAAO,EAAG,IAAI,CAAC,KAAK,CAAC,WAAa,GAClC,qBAAC,IAAI,IAAC,SAAS,EAAC,iBAAiB,GAAG,sBAAO,CAAC,IAAM,CAAO,CAClD,CACL,CACP,CAAC,CAAC;IACP,CAAC;IAEO,mDAAsB,GAA9B;QAAA,iBA8BC;QA7BC,MAAM,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,IAAI,CACvC,qBAAC,GAAG,IAAC,SAAS,EAAG,wCAAM,CAAC,mBAAqB,GAC3C,qBAAC,MAAM,IACL,SAAS,EAAG,wCAAM,CAAC,uBAAyB,EAC5C,QAAQ,EAAG,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,CAAG,EACzC,OAAO,EAAG,cAAQ,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,4BAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAG,GAChE,qBAAC,CAAC,IAAC,SAAS,EAAG,4BAAG,CAChB,IAAI,CAAC,aAAa,CAAC,4BAAa,CAAC,IAAI,CAAC,EACtC,wCAAM,CAAC,qBAAqB,CAAG,EAAK,EACpC,sBAAO,CAAC,oBAAsB,CACzB,EACT,qBAAC,IAAI,IAAC,IAAI,EAAC,QAAQ,EAAC,SAAS,EAAG,4BAAG,CAAC,wCAAM,CAAC,uBAAuB,CAAG,GACjE,oCAAY,CAAC,MAAM,CACnB,sBAAO,CAAC,uBAAuB,EAC/B,IAAI,CAAC,KAAK,CAAC,WAAW,EACtB,IAAI,CAAC,KAAK,CAAC,aAAa,CACvB,CACE,EACP,qBAAC,MAAM,IACL,SAAS,EAAG,wCAAM,CAAC,uBAAyB,EAC5C,QAAQ,EAAG,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,IAAI,CAAC,KAAK,CAAC,aAAe,EAChE,OAAO,EAAG,cAAQ,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,4BAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAG,GAC9D,sBAAO,CAAC,oBAAsB,EAChC,qBAAC,CAAC,IAAC,SAAS,EAAG,4BAAG,CAChB,IAAI,CAAC,aAAa,CAAC,4BAAa,CAAC,IAAI,CAAC,EACtC,wCAAM,CAAC,qBAAqB,CAAG,EAAK,CAC/B,CACL,CACP,CAAC,CAAC;IACL,CAAC;IAEO,0CAAa,GAArB,UAAsB,GAAkB;QACtC,IAAM,GAAG,GAAY,QAAQ,CAAC,GAAG,KAAK,KAAK,CAAC;QAC5C,IAAM,OAAO,GAAW,0BAA0B,CAAC;QAEnD,EAAE,CAAC,CAAC,GAAG,KAAK,4BAAa,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG,GAAG,OAAO,GAAG,MAAM,CAAC,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,OAAO,GAAG,CAAC,GAAG,GAAG,MAAM,GAAG,OAAO,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IACH,yBAAC;AAAD,CAzEA,AAyEC,CAzE+C,KAAK,CAAC,SAAS,GAyE9D;AAzED;oCAyEC,CAAA","file":"local/clientSideWebParts/propertyPane/propertyPaneFooter/PropertyPaneFooter.js","sourcesContent":["/**\r\n * @Copyright (c) Microsoft Corporation.  All rights reserved.\r\n *\r\n * @file PropertyPaneFooter.tsx\r\n */\r\n\r\nimport * as React from 'react';\r\nimport { css } from 'office-ui-fabric-react';\r\nimport strings from '../loc/Strings.resx';\r\nimport styles from './PropertyPaneFooter.module.scss';\r\nimport { StringHelper } from '@ms/odsp-utilities-bundle';\r\nimport { PageDirection } from '../propertyPane/PropertyPane';\r\n\r\nexport interface IPropertyPaneFooterProps {\r\n  isReactive: boolean;\r\n  isSaveButtonEnabled: boolean;\r\n  numberOfPages: number;\r\n  currentPage: number;\r\n  onSaveClick: () => void;\r\n  onFlipPage: (direction: PageDirection) => void;\r\n}\r\n\r\nexport default class PropertyPaneFooter extends React.Component<IPropertyPaneFooterProps, void> {\r\n\r\n  constructor(props: IPropertyPaneFooterProps) {\r\n    super(props);\r\n\r\n    this._renderCommandButtons = this._renderCommandButtons.bind(this);\r\n    this._pageNavigationButtons = this._pageNavigationButtons.bind(this);\r\n  }\r\n\r\n  public render(): React.ReactElement<{}> {\r\n    return ((!this.props.isReactive || this.props.numberOfPages > 1) && (\r\n        <div className={ styles.propertyPaneFooter }>\r\n          { this._renderCommandButtons() }\r\n          { this._pageNavigationButtons() }\r\n        </div>\r\n      ));\r\n  }\r\n\r\n  private _renderCommandButtons(): React.ReactElement<{}> {\r\n    // We are specifically checking for 'false' because there are cases where the prop can have\r\n    // 'undefined' as it's value and we do not want to display the command buttons in that case.\r\n    return ((this.props.isReactive === false) && (\r\n        <div className={ this.props.numberOfPages > 1 ? styles.propertyPaneCommandButtonsBox : undefined }>\r\n          <button className='ms-Button ms-Button--primary' disabled={ !this.props.isSaveButtonEnabled }\r\n            onClick={ this.props.onSaveClick }>\r\n            <span className='ms-Button-label'>{ strings.Save }</span>\r\n          </button>\r\n        </div>\r\n      ));\r\n  }\r\n\r\n  private _pageNavigationButtons(): React.ReactElement<{}> {\r\n    return ( this.props.numberOfPages > 1 && (\r\n      <div className={ styles.propertyPanePageNav }>\r\n        <button\r\n          className={ styles.propertyPaneBackNavLink }\r\n          disabled={ this.props.currentPage === 1 }\r\n          onClick={ () => { this.props.onFlipPage(PageDirection.back); } }>\r\n          <i className={ css(\r\n            this._arrowKeyIcon(PageDirection.back),\r\n            styles.propertyPaneBackArrow) }></i>\r\n          { strings.PropertyPaneBackPage }\r\n        </button>\r\n        <span role='status' className={ css(styles.propertyPanePageOfPages) }>\r\n          { StringHelper.format(\r\n            strings.PropertyPanePageOfPages,\r\n            this.props.currentPage,\r\n            this.props.numberOfPages\r\n          ) }\r\n        </span>\r\n        <button\r\n          className={ styles.propertyPaneNextNavLink }\r\n          disabled={ this.props.currentPage === this.props.numberOfPages }\r\n          onClick={ () => { this.props.onFlipPage(PageDirection.next); } }>\r\n          { strings.PropertyPaneNextPage }\r\n          <i className={ css(\r\n            this._arrowKeyIcon(PageDirection.next),\r\n            styles.propertyPaneNextArrow) }></i>\r\n        </button>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  private _arrowKeyIcon(dir: PageDirection): string {\r\n    const rtl: boolean = document.dir === 'rtl';\r\n    const iconCSS: string = 'ms-Icon ms-Icon--Chevron';\r\n\r\n    if (dir === PageDirection.back) {\r\n      return iconCSS + (rtl ? 'Right' : 'Left');\r\n    } else {\r\n      return iconCSS + (rtl ? 'Left' : 'Right');\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}