{"version":3,"sources":["components/DocumentCard/DocumentCard.tsx"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,mCAAqD,sBAAsB,CAAC,CAAA;AAC5E,oBAAoB,qBAAqB,CAAC,CAAA;AAC1C,QAAO,qBAAqB,CAAC,CAAA;AAE7B;IAAkC,gCAAwC;IAA1E;QAAkC,8BAAwC;IAwC1E,CAAC;IAnCQ,6BAAM,GAAb;QACE,IAAA,eAAiF,EAA3E,oBAAO,EAAE,4BAAW,EAAE,sBAAQ,EAAE,wBAAS,EAAE,cAAI,EAAE,4BAAW,CAAgB;QAClF,8FAA8F;QAC9F,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;YAC5B,OAAO,GAAG;gBACR,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,WAAW,CAAC;YACrC,CAAC,CAAC;QACJ,CAAC;QAED,gFAAgF;QAChF,IAAI,KAAK,CAAC;QACV,EAAE,CAAC,CAAC,IAAI,KAAK,qCAAgB,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;YACrD,KAAK,GAAG;gBACN,iBAAiB,EAAE,WAAW;aAC/B,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,CACL,qBAAC,GAAG,IACF,SAAS,EACP,SAAG,CACD,iBAAiB,EACjB;YACE,6BAA6B,EAAE,OAAO,GAAG,IAAI,GAAG,KAAK;YACrD,0BAA0B,EAAE,IAAI,KAAK,qCAAgB,CAAC,OAAO,GAAG,IAAI,GAAG,KAAK;SAC7E,EACD,SAAS,CAEZ,EACD,OAAO,EAAG,OAAS,EACnB,KAAK,EAAG,KAAO,GACb,QAAU,CACR,CACP,CAAC;IACJ,CAAC;IAtCa,yBAAY,GAAuB;QAC/C,IAAI,EAAE,qCAAgB,CAAC,MAAM;KAC9B,CAAC;IAqCJ,mBAAC;AAAD,CAxCA,AAwCC,CAxCiC,KAAK,CAAC,SAAS,GAwChD;AAxCY,oBAAY,eAwCxB,CAAA","file":"components/DocumentCard/DocumentCard.js","sourcesContent":["import * as React from 'react';\nimport { IDocumentCardProps, DocumentCardType } from './DocumentCard.Props';\nimport { css } from '../../utilities/css';\nimport './DocumentCard.scss';\n\nexport class DocumentCard extends React.Component<IDocumentCardProps, any> {\n  public static defaultProps: IDocumentCardProps = {\n    type: DocumentCardType.normal\n  };\n\n  public render() {\n    let { onClick, onClickHref, children, className, type, accentColor } = this.props;\n    // If no onClickFunction was provided and we do have an onClickURL, create a function from it.\n    if (!onClick && onClickHref) {\n      onClick = () => {\n        window.location.href = onClickHref;\n      };\n    }\n\n    // Override the border color if an accent color was provided (compact card only)\n    let style;\n    if (type === DocumentCardType.compact && accentColor) {\n      style = {\n        borderBottomColor: accentColor\n      };\n    }\n\n    return (\n      <div\n        className={\n          css(\n            'ms-DocumentCard',\n            {\n              'ms-DocumentCard--actionable': onClick ? true : false,\n              'ms-DocumentCard--compact': type === DocumentCardType.compact ? true : false\n            },\n            className\n          )\n        }\n        onClick={ onClick }\n        style={ style }>\n        { children }\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"/src"}