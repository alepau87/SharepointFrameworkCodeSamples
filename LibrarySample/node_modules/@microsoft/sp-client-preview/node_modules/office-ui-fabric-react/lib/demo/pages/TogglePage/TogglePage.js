"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var React = require('react');
var index_1 = require('../../../index');
var index_2 = require('../../components/index');
var Toggle_Basic_Example_1 = require('./examples/Toggle.Basic.Example');
var pageroute_1 = require('../../utilities/pageroute');
var AppState_1 = require('../../components/App/AppState');
var ToggleBasicExampleCode = require('./examples/Toggle.Basic.Example.tsx');
var TogglePage = (function (_super) {
    __extends(TogglePage, _super);
    function TogglePage() {
        _super.call(this);
        this._url = pageroute_1.getPageRouteFromState(AppState_1.AppState, 'Basic components', 'Toggle');
    }
    TogglePage.prototype.render = function () {
        return (React.createElement(index_2.ComponentPage, {title: 'Toggle', componentName: 'ToggleExample', exampleCards: [
            React.createElement(index_2.ExampleCard, {title: 'Toggle', code: ToggleBasicExampleCode}, React.createElement(Toggle_Basic_Example_1.ToggleBasicExample, null))
        ], propertiesTables: [
            React.createElement(index_2.PropertiesTableSet, {componentName: 'Toggle'})
        ], overview: React.createElement("div", null, React.createElement(index_1.Link, {target: '_blank', href: 'http://dev.office.com/fabric/components/Toggle'}, "Toggles"), React.createElement("span", null, " allow the user to turn an option on/off.")), route: this._url, isHeaderVisible: this.props.isHeaderVisible}));
    };
    return TogglePage;
}(React.Component));
exports.TogglePage = TogglePage;

//# sourceMappingURL=TogglePage.js.map
