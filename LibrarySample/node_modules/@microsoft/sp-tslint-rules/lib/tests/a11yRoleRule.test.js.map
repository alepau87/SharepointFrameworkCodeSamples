{"version":3,"sources":["tests/a11yRoleRule.test.ts"],"names":[],"mappings":"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","file":"tests/a11yRoleRule.test.js","sourcesContent":["import TestHelper from './TestHelper';\r\nimport { getFailureStringInvalidRole, getFailureStringUndefinedRole } from '../rules/a11yRoleRule';\r\n\r\n/**\r\n * Unit tests for a11y-role\r\n */\r\n\r\n// tslint:disable:no-empty\r\ndescribe('a11yRoleRule', () => {\r\n  const ruleName: string = 'a11y-role';\r\n\r\n  describe('should pass', () => {\r\n    it('when the role name is correct', () => {\r\n      const fileName: string = 'test-data/a11yRole/PassingTestInputs/CorrectName.tsx';\r\n      TestHelper.assertNoViolation(ruleName, fileName);\r\n    });\r\n\r\n    it('when the attribute name is not role', () => {\r\n      const fileName: string = 'test-data/a11yRole/PassingTestInputs/AttributeNotRole.tsx';\r\n      TestHelper.assertNoViolation(ruleName, fileName);\r\n    });\r\n\r\n    it('when the role name is not string literal', () => {\r\n      const fileName: string = 'test-data/a11yRole/PassingTestInputs/RoleNameNotStringLiteral.tsx';\r\n      TestHelper.assertNoViolation(ruleName, fileName);\r\n    });\r\n\r\n    it('for multiple correct role names', () => {\r\n      const fileName: string = 'test-data/a11yRole/PassingTestInputs/MultipleCorrectRole.tsx';\r\n      TestHelper.assertNoViolation(ruleName, fileName);\r\n    });\r\n  });\r\n\r\n  describe('should fail', () => {\r\n    it('for role name not existant', () => {\r\n      const fileName: string = 'test-data/a11yRole/FailingTestInputs/InvalidRole.tsx';\r\n\r\n      TestHelper.assertViolations(\r\n        ruleName,\r\n        fileName,\r\n        [\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 6, line: 1 },\r\n            failure: getFailureStringInvalidRole('myRoleName')\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 6, line: 2 },\r\n            failure: getFailureStringInvalidRole('wrong')\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 6, line: 3 },\r\n            failure: getFailureStringInvalidRole('role')\r\n          }\r\n        ]);\r\n    });\r\n\r\n    it('for role name that is abstract', () => {\r\n      const fileName: string = 'test-data/a11yRole/FailingTestInputs/AbstractRole.tsx';\r\n\r\n      TestHelper.assertViolations(\r\n        ruleName,\r\n        fileName,\r\n        [\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 6, line: 1 },\r\n            failure: getFailureStringInvalidRole('input')\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 6, line: 2 },\r\n            failure: getFailureStringInvalidRole('landmark')\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 6, line: 3 },\r\n            failure: getFailureStringInvalidRole('structure')\r\n          }\r\n        ]);\r\n    });\r\n\r\n    it('when the role name is not defined', () => {\r\n      const fileName: string = 'test-data/a11yRole/FailingTestInputs/UndefinedRole.tsx';\r\n\r\n      TestHelper.assertViolations(\r\n        ruleName,\r\n        fileName,\r\n        [\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 6, line: 4 },\r\n            failure: getFailureStringUndefinedRole()\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 6, line: 5 },\r\n            failure: getFailureStringUndefinedRole()\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 6, line: 6 },\r\n            failure: getFailureStringUndefinedRole()\r\n          }\r\n        ]);\r\n    });\r\n  });\r\n});\r\n"],"sourceRoot":"/src"}