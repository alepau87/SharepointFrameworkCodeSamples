{"version":3,"sources":["tests/a11yRoleHasRequiredAriaPropsRule.test.ts"],"names":[],"mappings":"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","file":"tests/a11yRoleHasRequiredAriaPropsRule.test.js","sourcesContent":["import TestHelper from './TestHelper';\r\nimport { getFailureStringForNotImplicitRole } from '../rules/a11yRoleHasRequiredAriaPropsRule';\r\n\r\n/**\r\n * Unit test for a11y-role-has-required-aria-props rule\r\n */\r\ndescribe('a11yRoleHasRequiredAriaPropsRule', () => {\r\n  const ruleName: string = 'a11y-role-has-required-aria-props';\r\n\r\n  describe('should pass', () => {\r\n    const fileDirectory: string = 'test-data/a11yRoleHasRequiredAriaProps/PassingTestInputs/';\r\n\r\n    it('when the attribute has no valid role', () => {\r\n      const fileName: string = fileDirectory + 'AttributeHasNoValidRole.tsx';\r\n      TestHelper.assertNoViolation(ruleName, fileName);\r\n    });\r\n\r\n    it('when the role value is not string', () => {\r\n      const fileName: string = fileDirectory + 'RoleValueNotLiteralString.tsx';\r\n      TestHelper.assertNoViolation(ruleName, fileName);\r\n    });\r\n\r\n    it('when the role value has no required props', () => {\r\n      const fileName: string = fileDirectory + 'RoleHasNoRequiredProps.tsx';\r\n      TestHelper.assertNoViolation(ruleName, fileName);\r\n    });\r\n\r\n    it('when the role value and attributes have required props', () => {\r\n      const fileName: string = fileDirectory + 'RoleValueAndAttributesHaveRequiredProps.tsx';\r\n      TestHelper.assertNoViolation(ruleName, fileName);\r\n    });\r\n  });\r\n\r\n  describe('should fail', () => {\r\n    const fileDirectory: string = 'test-data/a11yRoleHasRequiredAriaProps/FailingTestInputs/';\r\n\r\n    it('when the slider role missing required props', () => {\r\n      const fileName: string = fileDirectory + 'SliderRoleMissingRequiredProps.tsx';\r\n\r\n      TestHelper.assertViolations(\r\n        ruleName,\r\n        fileName,\r\n        [\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 1 },\r\n            failure: getFailureStringForNotImplicitRole(\r\n              ['slider'],\r\n              ['aria-valuemax', 'aria-valuemin', 'aria-valuenow']\r\n            )\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 2 },\r\n            failure: getFailureStringForNotImplicitRole(\r\n              ['slider'],\r\n              ['aria-valuemax', 'aria-valuemin', 'aria-valuenow']\r\n            )\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 3 },\r\n            failure: getFailureStringForNotImplicitRole(\r\n              ['slider'],\r\n              ['aria-valuenow']\r\n            )\r\n          }\r\n        ]\r\n      );\r\n    });\r\n\r\n    it('when the spinbutton role missing required props', () => {\r\n      const fileName: string = fileDirectory + 'SpinbuttonRoleMissingRequiredProps.tsx';\r\n\r\n      TestHelper.assertViolations(\r\n        ruleName,\r\n        fileName,\r\n        [\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 1 },\r\n            failure: getFailureStringForNotImplicitRole(\r\n              ['spinbutton'],\r\n              ['aria-valuemax', 'aria-valuemin', 'aria-valuenow']\r\n            )\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 2 },\r\n            failure: getFailureStringForNotImplicitRole(\r\n              ['button', 'spinbutton'],\r\n              ['aria-valuemax', 'aria-valuemin', 'aria-valuenow']\r\n            )\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 3 },\r\n            failure: getFailureStringForNotImplicitRole(\r\n              ['spinbutton'],\r\n              ['aria-valuemin']\r\n            )\r\n          }\r\n        ]\r\n      );\r\n    });\r\n\r\n    it('when the checkbox role missing required props', () => {\r\n      const fileName: string = fileDirectory + 'CheckboxRoleMissingRequiredProps.tsx';\r\n\r\n      TestHelper.assertViolations(\r\n        ruleName,\r\n        fileName,\r\n        [\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 1 },\r\n            failure: getFailureStringForNotImplicitRole(['checkbox'], ['aria-checked'])\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 2 },\r\n            failure: getFailureStringForNotImplicitRole(['checkbox'], ['aria-checked'])\r\n          }\r\n        ]\r\n      );\r\n    });\r\n\r\n    it('when the combobox role missing required props', () => {\r\n      const fileName: string = fileDirectory + 'ComboboxRoleMissingRequiredProps.tsx';\r\n\r\n      TestHelper.assertViolations(\r\n        ruleName,\r\n        fileName,\r\n        [\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 1 },\r\n            failure: getFailureStringForNotImplicitRole(['combobox'], ['aria-expanded'])\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 2 },\r\n            failure: getFailureStringForNotImplicitRole(['combobox'], ['aria-expanded'])\r\n          }\r\n        ]\r\n      );\r\n    });\r\n\r\n    it('when the scrollbar role missing required props', () => {\r\n      const fileName: string = fileDirectory + 'ScrollbarRoleMissingRequiredProps.tsx';\r\n\r\n      TestHelper.assertViolations(\r\n        ruleName,\r\n        fileName,\r\n        [\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 1 },\r\n            failure: getFailureStringForNotImplicitRole(\r\n              ['scrollbar'],\r\n              ['aria-controls', 'aria-orientation', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow']\r\n            )\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 2 },\r\n            failure: getFailureStringForNotImplicitRole(\r\n              ['scrollbar'],\r\n              ['aria-controls', 'aria-orientation', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow']\r\n            )\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 3 },\r\n            failure: getFailureStringForNotImplicitRole(\r\n              ['scrollbar'],\r\n              ['aria-valuemin', 'aria-valuenow']\r\n            )\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 4 },\r\n            failure: getFailureStringForNotImplicitRole(\r\n              ['scrollbar'],\r\n              ['aria-valuenow']\r\n            )\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 5 },\r\n            failure: getFailureStringForNotImplicitRole(\r\n              ['scrollbar'],\r\n              ['aria-controls']\r\n            )\r\n          }\r\n        ]\r\n      );\r\n    });\r\n\r\n    it('when multiple role missing requiredProps', () => {\r\n      const fileName: string = fileDirectory + 'MultipleRoleMissingRequiredProps.tsx';\r\n\r\n      TestHelper.assertViolations(\r\n        ruleName,\r\n        fileName,\r\n        [\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 1 },\r\n            failure: getFailureStringForNotImplicitRole(['button', 'checkbox'], ['aria-checked'])\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 2 },\r\n            failure: getFailureStringForNotImplicitRole(\r\n              ['button', 'checkbox', 'combobox'],\r\n              ['aria-checked', 'aria-expanded']\r\n            )\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 3 },\r\n            failure: getFailureStringForNotImplicitRole(['button', 'checkbox', 'combobox'], ['aria-expanded'])\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 4 },\r\n            failure: getFailureStringForNotImplicitRole(['button', 'checkbox', 'combobox'], ['aria-checked'])\r\n          }\r\n        ]\r\n      );\r\n    });\r\n  });\r\n});\r\n"],"sourceRoot":"/src"}