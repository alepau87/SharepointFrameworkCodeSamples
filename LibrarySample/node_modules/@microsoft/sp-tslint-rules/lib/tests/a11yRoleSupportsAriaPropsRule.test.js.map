{"version":3,"sources":["tests/a11yRoleSupportsAriaPropsRule.test.ts"],"names":[],"mappings":"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","file":"tests/a11yRoleSupportsAriaPropsRule.test.js","sourcesContent":["import TestHelper from './TestHelper';\r\nimport {\r\n  getFailureStringForImplicitRole,\r\n  getFailureStringForNotImplicitRole\r\n} from '../rules/a11yRoleSupportsAriaPropsRule';\r\n\r\n/**\r\n * Unit test for a11y-role-supports-aria-props rule.\r\n */\r\ndescribe('a11yRoleSupportsAriaPropsRule', () => {\r\n  const ruleName: string = 'a11y-role-supports-aria-props';\r\n\r\n  describe('should pass', () => {\r\n    describe('implicit role test', () => {\r\n      const fileDirectory: string = 'test-data/a11yRoleSupportsAriaProps/PassingTestInputs/ImplicitRoleTestInputs/';\r\n\r\n      it('when a tag implicit role is link', () => {\r\n        const fileName: string = fileDirectory + 'a/ImplicitLinkRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when area tag implicit role is link', () => {\r\n        const fileName: string = fileDirectory + 'area/ImplicitLinkRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when img tag implicit role is img', () => {\r\n        const fileName: string = fileDirectory + 'img/ImplicitImgRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when img tag implicit role is presentation', () => {\r\n        const fileName: string = fileDirectory + 'img/ImplicitPresentationRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when input tag implicit role is button', () => {\r\n        const fileName: string = fileDirectory + 'input/ImplicitButtonRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when input tag implicit role is checkbox', () => {\r\n        const fileName: string = fileDirectory + 'input/ImplicitCheckboxRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when input tag implicit role is slider', () => {\r\n        const fileName: string = fileDirectory + 'input/ImplicitSliderRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when input tag implicit role is textbox', () => {\r\n        const fileName: string = fileDirectory + 'input/ImplicitTextboxRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when input tag implicit role is radio', () => {\r\n        const fileName: string = fileDirectory + 'input/ImplicitRadioRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when link tag implicit role is link', () => {\r\n        const fileName: string = fileDirectory + 'link/ImplicitLinkRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when menu tag implicit role is toolbar', () => {\r\n        const fileName: string = fileDirectory + 'menu/ImplicitToolbarRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when menuitem tag implicit role is menuitemcheckbox', () => {\r\n        const fileName: string = fileDirectory + 'menuitem/ImplicitMenuitemcheckboxRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when menuitem tag implicit role is menuitemradio', () => {\r\n        const fileName: string = fileDirectory + 'menuitem/ImplicitMenuitemradioRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when menuitem tag implicit role is menuitem', () => {\r\n        const fileName: string = fileDirectory + 'menuitem/ImplicitMenuitemRole.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when other tags has implicit role', () => {\r\n        const fileName: string = fileDirectory + 'otherTags.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n    });\r\n\r\n    describe('not implicit role test', () => {\r\n      const fileDirectory: string = 'test-data/a11yRoleSupportsAriaProps/PassingTestInputs/NotImplicitRoleTestInputs/';\r\n\r\n      it('when undefined role or empty role value', () => {\r\n        const fileName: string = fileDirectory + 'UndefinedRoleOrEmptyRoleValue.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n\r\n      it('when not empty role value', () => {\r\n        const fileName: string = fileDirectory + 'NotEmptyRoleValue.tsx';\r\n        TestHelper.assertNoViolation(ruleName, fileName);\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('should fail', () => {\r\n    const fileDirectory: string = 'test-data/a11yRoleSupportsAriaProps/FailingTestInputs/';\r\n\r\n    it('when role name not supports aria prop', () => {\r\n      const fileName: string = fileDirectory + 'RoleNameNotSupportsAriaProp.tsx';\r\n\r\n      TestHelper.assertViolations(\r\n        ruleName,\r\n        fileName,\r\n        [\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 2 },\r\n            failure: getFailureStringForNotImplicitRole(['button'], ['aria-checked'])\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 5 },\r\n            failure: getFailureStringForNotImplicitRole(['button', 'img'], ['aria-checked'])\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 8 },\r\n            failure: getFailureStringForNotImplicitRole(['button'], ['aria-checked'])\r\n          }\r\n        ]\r\n      );\r\n    });\r\n\r\n    it('when implicit role not supports aria prop', () => {\r\n      const fileName: string = fileDirectory + 'ImplicitRoleNotSupportsAriaProp.tsx';\r\n\r\n      TestHelper.assertViolations(\r\n        ruleName,\r\n        fileName,\r\n        [\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 1 },\r\n            failure: getFailureStringForImplicitRole('a', 'link', ['aria-checked'])\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 2 },\r\n            failure: getFailureStringForImplicitRole('area', 'link', ['aria-checked'])\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 3 },\r\n            failure: getFailureStringForImplicitRole('link', 'link', ['aria-checked'])\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 4 },\r\n            failure: getFailureStringForImplicitRole('img', 'img', ['aria-checked'])\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 5 },\r\n            failure: getFailureStringForImplicitRole('menu', 'toolbar', ['aria-checked'])\r\n          },\r\n          {\r\n            name: fileName,\r\n            ruleName: ruleName,\r\n            startPosition: { character: 1, line: 6 },\r\n            failure: getFailureStringForImplicitRole('aside', 'complementary', ['aria-checked'])\r\n          }\r\n        ]\r\n      );\r\n    });\r\n  });\r\n});\r\n"],"sourceRoot":"/src"}