{"version":3,"sources":["utils/implicitRoles/menu.ts"],"names":[],"mappings":";AACA,6BAAiE,iBAAiB,CAAC,CAAA;AAEnF,IAAM,UAAU,GAAW,MAAM,CAAC;AAElC;;GAEG;AACH,gCAAgC,IAAa;IAC3C,IAAM,IAAI,GAAoB,6CAA8B,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC;IAE/E,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACT,IAAM,KAAK,GAAW,+BAAgB,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC;QAE1D,MAAM,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,WAAW,EAAE,KAAK,SAAS,CAAC,GAAG,SAAS,GAAG,SAAS,CAAC;IAC9E,CAAC;IAED,MAAM,CAAC,SAAS,CAAC;AACnB,CAAC;AAEkC,YAAI,0BAFtC;AAEyC","file":"utils/implicitRoles/menu.js","sourcesContent":["import * as ts from 'typescript';\r\nimport { getJsxAttributesFromJsxElement, getStringLiteral } from '../JsxAttribute';\r\n\r\nconst typeString: string = 'type';\r\n\r\n/**\r\n * @Returns the implicit role for a menu tag.\r\n */\r\nfunction getImplicitRoleForMenu(node: ts.Node): string {\r\n  const type: ts.JsxAttribute = getJsxAttributesFromJsxElement(node)[typeString];\r\n\r\n  if (type) {\r\n    const value: string = getStringLiteral(type) || undefined;\r\n\r\n    return (value && value.toUpperCase() === 'TOOLBAR') ? 'toolbar' : undefined;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nexport { getImplicitRoleForMenu as MENU };\r\n"],"sourceRoot":"/src"}