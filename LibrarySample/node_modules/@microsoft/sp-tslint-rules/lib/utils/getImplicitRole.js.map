{"version":3,"sources":["utils/getImplicitRole.ts"],"names":[],"mappings":";AACA,IAAY,aAAa,WAAM,iBAAiB,CAAC,CAAA;AACjD,0BAAsD,aAAa,CAAC,CAAA;AAEpE;;;;GAIG;AACH,yBAAgC,IAAa;IAC3C,IAAI,OAAe,CAAC;IAEpB,EAAE,CAAC,CAAC,wBAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvB,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IAClD,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,mCAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACnC,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,OAAO,GAAG,SAAS,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,OAAO,IAAI,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;AACvG,CAAC;AAZe,uBAAe,kBAY9B,CAAA","file":"utils/getImplicitRole.js","sourcesContent":["import * as ts from 'typescript';\r\nimport * as implicitRoles from './implicitRoles';\r\nimport { isJsxElement, isJsxSelfClosingElement } from './TypeGuard';\r\n\r\n/**\r\n * @returns the implicit role for a JsxElement, JsxSelfClosingElement or JsxOpeningElement.\r\n * The implementation is inspired and re-implemented from\r\n * https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/src/util/getImplicitRole.js\r\n */\r\nexport function getImplicitRole(node: ts.Node): string {\r\n  let tagName: string;\r\n\r\n  if (isJsxElement(node)) {\r\n    tagName = node.openingElement.tagName.getText();\r\n  } else if (isJsxSelfClosingElement(node)) {\r\n    tagName = node.tagName.getText();\r\n  } else {\r\n    tagName = undefined;\r\n  }\r\n\r\n  return tagName && implicitRoles[tagName.toUpperCase()] && implicitRoles[tagName.toUpperCase()](node);\r\n}\r\n"],"sourceRoot":"/src"}