/**
 * @copyright Microsoft Corporation. All rights reserved.
 *
 * @JsxAttribute utilities for react rules.
 */
import * as ts from 'typescript';
export declare function getPropName(node: ts.JsxAttribute): string;
/**
 * Get the string literal in jsx attribute initializer with following format:
 * @example
 * <div attribute='StringLiteral' />
 * @example
 * <div attribute={ 'StringLiteral' } />
 */
export declare function getStringLiteral(node: ts.JsxAttribute): string;
/**
 * Get the numeric literal in jsx attribute initializer with following format:
 * @example
 * <div attribute={ 1 } />
 */
export declare function getNumericLiteral(node: ts.JsxAttribute): string;
/**
 * Get an array of attributes in the given node.
 * It contains JsxAttribute and JsxSpreadAttribute.
 */
export declare function getAllAttributesFromJsxElement(node: ts.Node): (ts.JsxAttribute | ts.JsxSpreadAttribute)[];
/**
 * Get a dictionary of JsxAttribute from a JsxElement, JsxSelfClosingElement or JsxOpeningElement.
 * @returns { [propName: string]: ts.JsxAttribute } a dictionary has lowercase keys.
 */
export declare function getJsxAttributesFromJsxElement(node: ts.Node): {
    [propName: string]: ts.JsxAttribute;
};
