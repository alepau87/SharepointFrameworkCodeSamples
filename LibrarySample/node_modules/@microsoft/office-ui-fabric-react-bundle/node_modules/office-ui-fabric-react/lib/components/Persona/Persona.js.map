{"version":3,"sources":["components/Persona/Persona.tsx"],"names":[],"mappings":"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","file":"components/Persona/Persona.js","sourcesContent":["import * as React from 'react';\nimport { css } from '../../utilities/css';\nimport { Image, ImageFit } from '../../Image';\nimport {\n  IPersonaProps,\n  PersonaInitialsColor,\n  PersonaPresence,\n  PersonaSize\n} from './Persona.Props';\nimport {\n  PERSONA_INITIALS_COLOR,\n  PERSONA_PRESENCE,\n  PERSONA_SIZE\n} from './PersonaConsts';\nimport './Persona.scss';\n\nexport class Persona extends React.Component<IPersonaProps, any> {\n  public static defaultProps: IPersonaProps = {\n    primaryText: '',\n    size: PersonaSize.regular,\n    initialsColor: PersonaInitialsColor.blue,\n    presence: PersonaPresence.none\n  };\n\n  public render() {\n    let {\n      className,\n      size,\n      imageUrl,\n      imageInitials,\n      initialsColor,\n      presence,\n      primaryText,\n      secondaryText,\n      tertiaryText,\n      optionalText,\n      hidePersonaDetails\n    } = this.props;\n\n    let presenceElement = null;\n    if (presence !== PersonaPresence.none) {\n      let userPresence = PersonaPresence[presence],\n          statusIcon = null;\n      switch (userPresence) {\n        case 'online':\n          userPresence = 'SkypeCheck';\n          break;\n        case 'away':\n          userPresence = 'SkypeClock';\n          break;\n        case 'dnd':\n          userPresence = 'SkypeMinus';\n          break;\n        default:\n          userPresence = '';\n      }\n      if (userPresence) {\n        let iconClass = `ms-Persona-presenceIcon ms-Icon ms-Icon--${userPresence}`;\n        statusIcon = <i className={ iconClass }></i>;\n      }\n      presenceElement = <div className='ms-Persona-presence'>{ statusIcon }</div>;\n    }\n\n    let personaDetails = <div className='ms-Persona-details'>\n            <div className='ms-Persona-primaryText'>{ primaryText }</div>\n            { secondaryText ? (\n              <div className='ms-Persona-secondaryText'>{ secondaryText }</div>\n            ) : (null) }\n            <div className='ms-Persona-tertiaryText'>{ tertiaryText }</div>\n            <div className='ms-Persona-optionalText'>{ optionalText }</div>\n            { this.props.children }\n          </div>;\n    return (\n      <div { ...this.props as any } className={ css('ms-Persona', className, PERSONA_SIZE[size], PERSONA_PRESENCE[presence]) }>\n        { size !== PersonaSize.tiny && (\n          <div className='ms-Persona-imageArea'>\n            <div className={ css('ms-Persona-initials', PERSONA_INITIALS_COLOR[initialsColor]) }>{ imageInitials }</div>\n            <Image className='ms-Persona-image' imageFit={ ImageFit.cover } src={ imageUrl } />\n          </div>\n        ) }\n        { presenceElement }\n        { (!hidePersonaDetails || (size === PersonaSize.tiny)) && personaDetails }\n      </div>\n    );\n  }\n}\n"],"sourceRoot":"/src"}