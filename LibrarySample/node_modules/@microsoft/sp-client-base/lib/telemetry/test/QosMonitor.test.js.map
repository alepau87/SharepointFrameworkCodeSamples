{"version":3,"sources":["telemetry/test/QosMonitor.test.ts"],"names":[],"mappings":";AAAA,IAAM,MAAM,GAAsB,IAAI,CAAC,MAAM,CAAC;AAC9C,2BAAwB,mBAAmB,CAAC,CAAA;AAE5C,QAAQ,CAAC,kBAAkB,EAAE;IAC3B,QAAQ,CAAC,4BAA4B,EAAE;QACrC,EAAE,CAAC,iEAAiE,EAAE,UAAC,IAAe;YACpF,IAAM,SAAS,GAAe,IAAI,oBAAU,CAAC,aAAa,CAAC,CAAC;YAC5D,IAAM,WAAW,GAAW,aAAa,CAAC;YAC1C,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC;YAC9C,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACjC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,KAAK,KAAK,CAAC,CAAC;YAClD,IAAI,EAAE,CAAC;QACT,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","file":"telemetry/test/QosMonitor.test.js","sourcesContent":["const assert: Chai.AssertStatic = chai.assert;\r\nimport QosMonitor  from '../Api/QosMonitor';\r\n\r\ndescribe('QosMonitor tests', () => {\r\n  describe('Testing Apis in QosMonitor', () => {\r\n    it('QosMonitor test: CreateAndStartMonitor with normal senario name', (done: MochaDone) => {\r\n      const qosLogger: QosMonitor = new QosMonitor('TestSenario');\r\n      const senarioName: string = 'TestSenario';\r\n      assert.isTrue(qosLogger.name === senarioName);\r\n      assert.isTrue(qosLogger.enabled);\r\n      assert.isTrue(qosLogger.shortEventName === 'Qos');\r\n      done();\r\n    });\r\n  });\r\n});\r\n"],"sourceRoot":"/src"}