{"version":3,"sources":["webparts/librarysample/LibrarysampleWebPart.ts"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,IAAY,QAAQ,WAAM,WAAW,CAAC,CAAA;AACtC,kCAKO,8BAA8B,CAAC,CAAA;AAEtC,IAAY,OAAO,WAAM,sBAAsB,CAAC,CAAA;AAChD,8BAAmD,4BAA4B,CAAC,CAAA;AAEhF,IAAY,UAAU,WAAM,YAAY,CAAC,CAAA;AAEzC;IAAkD,wCAAiD;IAEjG,8BAAmB,OAAwB;QACzC,kBAAM,OAAO,CAAC,CAAC;IACjB,CAAC;IAEM,qCAAM,GAAb;QACE,IAAM,OAAO,GAA4C,KAAK,CAAC,aAAa,CAAC,uBAAa,EAAE;YAC1F,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;SACzC,CAAC,CAAC;QACH,QAAQ,CAAC;QACT,IAAI,QAAQ,GAAG,IAAI,UAAU,CAAC,cAAc,EAAE,CAAC;QAC/C,IAAI,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAED,sBAAc,sDAAoB;aAAlC;YACE,MAAM,CAAC;gBACL,KAAK,EAAE;oBACL;wBACE,MAAM,EAAE;4BACN,WAAW,EAAE,OAAO,CAAC,uBAAuB;yBAC7C;wBACD,MAAM,EAAE;4BACN;gCACE,SAAS,EAAE,OAAO,CAAC,cAAc;gCACjC,WAAW,EAAE;oCACX,yCAAqB,CAAC,aAAa,EAAE;wCACnC,KAAK,EAAE,OAAO,CAAC,qBAAqB;qCACrC,CAAC;iCACH;6BACF;yBACF;qBACF;iBACF;aACF,CAAC;QACJ,CAAC;;;OAAA;IACH,2BAAC;AAAD,CAtCA,AAsCC,CAtCiD,yCAAqB,GAsCtE;AAtCD;sCAsCC,CAAA","file":"webparts/librarysample/LibrarysampleWebPart.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneSettings,\r\n  IWebPartContext,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-client-preview';\r\n\r\nimport * as strings from 'librarysampleStrings';\r\nimport Librarysample, { ILibrarysampleProps } from './components/Librarysample';\r\nimport { ILibrarysampleWebPartProps } from './ILibrarysampleWebPartProps';\r\nimport * as calculator from 'calculator';\r\n\r\nexport default class LibrarysampleWebPart extends BaseClientSideWebPart<ILibrarysampleWebPartProps> {\r\n\r\n  public constructor(context: IWebPartContext) {\r\n    super(context);\r\n  }\r\n\r\n  public render(): void {\r\n    const element: React.ReactElement<ILibrarysampleProps> = React.createElement(Librarysample, {\r\n      description: this.properties.description\r\n    });\r\n    debugger;\r\n    var easycalc = new calculator.EasyCalculator();\r\n    var result = easycalc.sum(1,2);\r\n    console.log(result);\r\n    ReactDom.render(element, this.domElement);\r\n  }\r\n\r\n  protected get propertyPaneSettings(): IPropertyPaneSettings {\r\n    return {\r\n      pages: [\r\n        {\r\n          header: {\r\n            description: strings.PropertyPaneDescription\r\n          },\r\n          groups: [\r\n            {\r\n              groupName: strings.BasicGroupName,\r\n              groupFields: [\r\n                PropertyPaneTextField('description', {\r\n                  label: strings.DescriptionFieldLabel\r\n                })\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"/src"}